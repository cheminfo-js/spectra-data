{"version":3,"sources":["spectra-data.min.js"],"names":["e","exports","module","define","amd","f","window","global","self","spectraData","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"SD","NMR","NMR2D","./NMR","./NMR2D","./SD",2,"getConverter","convertToFloatArray","stringArray","floatArray","Array","parseFloat","convert","jcamp","options","keepRecordsRegExp","ldr","dataLabel","dataValue","ldrs","ii","position","endLine","infos","start","Date","ntuples","result","profiling","logs","spectra","info","spectrum","push","action","time","split","replace","indexOf","substring","trim","toUpperCase","xIndex","yIndex","firstVariable","secondVariable","symbol","first","firstX","firstY","last","lastX","lastY","vardim","nbPoints","factor","xFactor","yFactor","units","xUnit","yUnit","datatable","deltaX","title","dataType","twoD","observeFrequency","xType","indirectFrequency","shiftOffsetNum","shiftOffsetVal","varname","vartype","varform","min","max","yType","page","pageValue","pageSymbol","pageSymbolIndex","unit","prepareSpectrum","match","parseXYData","parsePeakTable","isMSField","convertMSFieldToLabel","add2D","keepSpectra","toLowerCase","addGCMS","xy","data","j","newData","x","y","k","value","GC_MS_FIELDS","existingGCMSFields","label","gcms","gc","ms","shift","isPeaktable","jj","values","currentData","lines","removeCommentRegExp","peakTableSplitRegExp","isXYdata","lastDif","ascii","currentX","currentY","xyDataSplitRegExp","DEBUG","firstPoint","expectedCurrentX","charCodeAt","String","fromCharCode","dup","convertTo3DZ","noise","minZ","maxZ","ySize","xSize","z","Math","abs","minX","maxX","minY","maxY","zData","contourLines","generateContourLines","minMax","pAx","pAy","pBx","pBy","lineZValue","contourLevels","nbLevels","povarHeight","Float32Array","isOver","nbSubSpectra","nbPovars","x0","xN","dx","y0","yN","dy","level","contourLevel","side","exp","zValue","iSubSpectra","povar","segments","JcampConverter","input","useWorker","postToWorker","worker","createWorker","Promise","resolve","stamp","now","random","stamps","postMessage","workerURL","URL","createObjectURL","Blob","toString","type","Worker","revokeObjectURL","addEventListener","event","output",3,"Infinity","mean","sum","geometricMean","pow","logGeometricMean","lnsum","log","grandMean","means","samples","truncatedMean","percent","inPlace","slice","sort","floor","contraHarmonicMean","order","r1","r2","standardDeviation","unbiased","sqrt","variance","standardError","median","alreadySorted","half","quartiles","quart","q1","ceil","q2","q3","theMean","theVariance","pooledStandardDeviation","pooledVariance","vari","mode","itemCount","itemArray","count","index","maxValue","maxIndex","covariance","vector1","vector2","mean1","mean2","cov","skewness","s2","s3","dev","m2","m3","g","b","kurtosis","s4","m4","v","c","entropy","eps","weightedMean","weights","weightedStandardDeviation","weightedVariance","w","center","standardize","standardDev","cumulativeSum","array",4,"FFT","FFTUtils","ifft2DArray","ft","ftRows","ftCols","tempTransform","nRows","nCols","init","tmpCols","re","im","iCol","iRow","bt","finalTransform","tmpRows","scale","indexB","fft2DArray","iRow0","iRow1","iRow2","iRow3","row1","row2","fft1d","this","reconstructTwoRealFFT","fourierTransform","realTransform1","realTransform2","rm","rp","ip","convolute2DI","ftSignal","ftFilter","./fftlib",5,"sd","PeakPicking","prototype","Object","create","constructor","fromJcamp","getNucleus","getSolventName","observeFrequencyX","getNMRPeakThreshold","nucleus","addNoise","addSpectraDatas","autoBaseline","postFourierTransform","zeroFilling","haarWhittakerBaselineCorrection","whittakerBaselineCorrection","brukerSpectra","apodization","echoAntiechoFilter","SNVFilter","powerFilter","power","getMinY","YShift","console","warn","logarithmFilter","correlationFilter","phaseCorrection","automaticPhase","useBrukerPhase","nmrPeakDetection","parameters","nH","peakPicking","toJcamp","./PeakPicking","jcampconverter",6,"PeakPicking2D","isHomoNuclear","observeFrequencyY","getLastY","getFirstY","getDeltaY","getNbSubSpectra","nmrPeakDetection2D","thresholdFactor","findPeaks2D","dim","./PeakPicking2D",7,"PeakOptimizer","diagonalError","tolerance","toleranceX","toleranceY","clean","peaks","threshold","Number","NEGATIVE_INFINITY","splice","enhanceSymmetry","signals","properties","initializeProperties","size","hits","signal","exist","checkCrossPeaks","completeMissingIfNeeded","toReturn","thisSignal","thisProp","addedPeaks","newSignal","tmpProp","nucleusX","nucleusY","resolutionX","resolutionY","shiftX","shiftY","diagX","diagY","updateProperties","cross","crossPeaksX","crossPeaksY","symmetricSearch","distanceTo","signalsProperties","toImage",8,"impurities","maxJ","peakList","GSD","shifts","proton","coupling","multiplicity","name","solvent","labelPeaks","frequency","column","nImpurities","nPeaks","scores","diff","score","gamma","impurityID","prevImp","maxIntensity","prevIndex","candidates","impuritiesPeaks","updateScore","mul","indexMin","thisJ1","thisJ2","thisJ3","thisJ4","createSignals","getXYData","noiseLevel","getNoiseLevel","X","Y","dY","ddY","stackInt","intervals","minddY","pop","signalsS","frecuency","possible","inter","linewith","height","points",9,"SimpleClustering","StatArray","smallFilter","getLoGnStdDevNMR","getNbPoints","isHomonuclear","getYData","nStdDev","convolutedSpectrum","convoluteWithLoG","peaksMC1","findPeaks2DLoG","peaksMax1","findPeaks2DMax","createSignals2D","inputSpectrum","ftSpectrum","ftFilterData","ir","ic","bitmask","nbDetectedPoints","iStart","extractArea","cs","rowI","colI","peakListMax","tmpIndex","peakPoints","scanBitmask","nValues","xAverage","yAverage","zSum","pt","minmax","newPeak","bf1","bf2","arrayPointToUnits","connectivity","tmp","clusters","fullClusterGenerator","iCluster","getLastX","getFirstX","peaks2D","sumZ","jPeak","./FFTUtils","./PeakOptimizer","./SimpleClustering","ml-stat/array",10,"activeElement","DATACLASS_XY","DATACLASS_PEAK","TYPE_NMR_SPECTRUM","TYPE_NMR_FID","TYPE_IR","TYPE_RAMAN","TYPE_UV","TYPE_MASS","TYPE_HPLC","TYPE_GC","TYPE_CD","TYPE_2DNMR_SPECTRUM","TYPE_2DNMR_FID","TYPE_XY_DEC","TYPE_XY_INC","TYPE_IV","setActiveElement","nactiveSpectrum","getActiveElement","getSpectrumData","setDataClass","dataClass","getSpectrum","isDataClassPeak","isDataClassXY","setDataType","getDataType","getXData","getX","getY","getTitle","setTitle","newTitle","getMaxY","getMinMaxY","stddev","averageDeviations","doublePoint","unitsToArrayPoint","inValue","getInterval","midPoint","currentArrayPoint","upperLimit","lowerLimit","round","getDeltaX","setMinMax","setMin","currentMin","setMax","globalShift","fillWith","from","to","end","suppressZone","simplePeakPicking","getMaxPeak","getSpectraDataY","getSpectraDataX","getParamDouble","defvalue","getParamString","getParamInt","getSpectrumDataY","putParam","getVector","direction","reversed","winPoints","xwin","ywin","is2D",11,"conn","clusterList","available","remaining","cluster","nextAv","toInclude","row",12,"version","release","date","_n","_bitrev","_cstb","core","_initArray","_makeBitReversalTable","_makeCosSinTable","fft","ifft1d","bt1d","fft2d","tre","tim","x1","x2","y1","y2","ifft2d","inv","d","h","ik","m","wr","wi","xr","xi","n4","Uint32Array","Float64Array","_paddingZero","n2","n8","n2p4","sin","PI","dc","ds","apis","ifft"],"mappings":"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","file":"spectra-data.min.js","sourcesContent":["/**\n * spectra-data - spectra-data project - manipulate spectra\n * @version v1.0.2\n * @link https://github.com/cheminfo-js/spectra-data\n * @license MIT\n */\n!function(e){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=e();else if(\"function\"==typeof define&&define.amd)define([],e);else{var f;\"undefined\"!=typeof window?f=window:\"undefined\"!=typeof global?f=global:\"undefined\"!=typeof self&&(f=self),f.spectraData=e()}}(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\n\nexports.SD = require('./SD');\nexports.NMR = require('./NMR');\nexports.NMR2D = require('./NMR2D');\n\n//exports.SD2 = require('/SD2');\n},{\"./NMR\":5,\"./NMR2D\":6,\"./SD\":10}],2:[function(require,module,exports){\n'use strict';\n\nfunction getConverter() {\n\n    // the following RegExp can only be used for XYdata, some peakTables have values with a \"E-5\" ...\n    var xyDataSplitRegExp = /[,\\t \\+-]*(?=[^\\d,\\t \\.])|[ \\t]+(?=[\\d+\\.-])/;\n    var removeCommentRegExp = /\\$\\$.*/;\n    var peakTableSplitRegExp = /[,\\t ]+/;\n    var DEBUG = false;\n\n    var GC_MS_FIELDS = ['TIC', '.RIC', 'SCANNUMBER'];\n\n    function convertToFloatArray(stringArray) {\n        var l = stringArray.length;\n        var floatArray = new Array(l);\n        for (var i = 0; i < l; i++) {\n            floatArray[i] = parseFloat(stringArray[i]);\n        }\n        return floatArray;\n    }\n\n    /*\n     options.keepSpectra: keep the original spectra for a 2D\n     options.xy: true // create x / y array instead of a 1D array\n     options.keepRecordsRegExp: which fields do we keep\n     */\n\n    function convert(jcamp, options) {\n        options = options || {};\n\n        var keepRecordsRegExp=/^[A-Z]+$/;\n        if (options.keepRecordsRegExp) keepRecordsRegExp=options.keepRecordsRegExp;\n\n        var start = new Date();\n\n        var ntuples = {},\n            ldr,\n            dataLabel,\n            dataValue,\n            ldrs,\n            i, ii, position, endLine, infos;\n\n        var result = {};\n        result.profiling = [];\n        result.logs = [];\n        var spectra = [];\n        result.spectra = spectra;\n        result.info = {};\n        var spectrum = {};\n\n        if (!(typeof jcamp == 'string')) return result;\n        // console.time('start');\n\n        if (result.profiling) result.profiling.push({action: 'Before split to LDRS', time: new Date() - start});\n\n        ldrs = jcamp.split(/[\\r\\n]+##/);\n\n        if (result.profiling) result.profiling.push({action: 'Split to LDRS', time: new Date() - start});\n\n        if (ldrs[0]) ldrs[0] = ldrs[0].replace(/^[\\r\\n ]*##/, '');\n\n        for (i = 0, ii = ldrs.length; i < ii; i++) {\n            ldr = ldrs[i];\n            // This is a new LDR\n            position = ldr.indexOf('=');\n            if (position > 0) {\n                dataLabel = ldr.substring(0, position);\n                dataValue = ldr.substring(position + 1).trim();\n            } else {\n                dataLabel = ldr;\n                dataValue = '';\n            }\n            dataLabel = dataLabel.replace(/[_ -]/g, '').toUpperCase();\n\n            if (dataLabel == 'DATATABLE') {\n\n                endLine = dataValue.indexOf('\\n');\n                if (endLine == -1) endLine = dataValue.indexOf('\\r');\n                if (endLine > 0) {\n                    var xIndex = -1;\n                    var yIndex = -1;\n                    // ##DATA TABLE= (X++(I..I)), XYDATA\n                    // We need to find the variables\n\n                    infos = dataValue.substring(0, endLine).split(/[ ,;\\t]+/);\n\n                    if (infos[0].indexOf('++') > 0) {\n                        var firstVariable = infos[0].replace(/.*\\(([a-zA-Z0-9]+)\\+\\+.*/, '$1');\n                        var secondVariable = infos[0].replace(/.*\\.\\.([a-zA-Z0-9]+).*/, '$1');\n                        xIndex = ntuples.symbol.indexOf(firstVariable);\n                        yIndex = ntuples.symbol.indexOf(secondVariable);\n                    }\n\n                    if (xIndex == -1) xIndex = 0;\n                    if (yIndex == -1) yIndex = 0;\n\n                    if (ntuples.first) {\n                        if (ntuples.first.length > xIndex) spectrum.firstX = ntuples.first[xIndex];\n                        if (ntuples.first.length > yIndex) spectrum.firstY = ntuples.first[yIndex];\n                    }\n                    if (ntuples.last) {\n                        if (ntuples.last.length > xIndex) spectrum.lastX = ntuples.last[xIndex];\n                        if (ntuples.last.length > yIndex) spectrum.lastY = ntuples.last[yIndex];\n                    }\n                    if (ntuples.vardim && ntuples.vardim.length > xIndex) {\n                        spectrum.nbPoints = ntuples.vardim[xIndex];\n                    }\n                    if (ntuples.factor) {\n                        if (ntuples.factor.length > xIndex) spectrum.xFactor = ntuples.factor[xIndex];\n                        if (ntuples.factor.length > yIndex) spectrum.yFactor = ntuples.factor[yIndex];\n                    }\n                    if (ntuples.units) {\n                        if (ntuples.units.length > xIndex) spectrum.xUnit = ntuples.units[xIndex];\n                        if (ntuples.units.length > yIndex) spectrum.yUnit = ntuples.units[yIndex];\n                    }\n                    spectrum.datatable = infos[0];\n                    if (infos[1] && infos[1].indexOf('PEAKS') > -1) {\n                        dataLabel = 'PEAKTABLE';\n                    } else if (infos[1] && (infos[1].indexOf('XYDATA') || infos[0].indexOf('++') > 0)) {\n                        dataLabel = 'XYDATA';\n                        spectrum.deltaX = (spectrum.lastX - spectrum.firstX) / (spectrum.nbPoints - 1);\n                    }\n                }\n            }\n\n\n            if (dataLabel == 'TITLE') {\n                spectrum.title = dataValue;\n            } else if (dataLabel == 'DATATYPE') {\n                spectrum.dataType = dataValue;\n                if (dataValue.indexOf('nD') > -1) {\n                    result.twoD = true;\n                }\n            } else if (dataLabel == 'XUNITS') {\n                spectrum.xUnit = dataValue;\n            } else if (dataLabel == 'YUNITS') {\n                spectrum.yUnit = dataValue;\n            } else if (dataLabel == 'FIRSTX') {\n                spectrum.firstX = parseFloat(dataValue);\n            } else if (dataLabel == 'LASTX') {\n                spectrum.lastX = parseFloat(dataValue);\n            } else if (dataLabel == 'FIRSTY') {\n                spectrum.firstY = parseFloat(dataValue);\n            } else if (dataLabel == 'NPOINTS') {\n                spectrum.nbPoints = parseFloat(dataValue);\n            } else if (dataLabel == 'XFACTOR') {\n                spectrum.xFactor = parseFloat(dataValue);\n            } else if (dataLabel == 'YFACTOR') {\n                spectrum.yFactor = parseFloat(dataValue);\n            } else if (dataLabel == 'DELTAX') {\n                spectrum.deltaX = parseFloat(dataValue);\n            } else if (dataLabel == '.OBSERVEFREQUENCY' || dataLabel == '$SFO1') {\n                if (!spectrum.observeFrequency) spectrum.observeFrequency = parseFloat(dataValue);\n            } else if (dataLabel == '.OBSERVENUCLEUS') {\n                if (!spectrum.xType) result.xType = dataValue.replace(/[^a-zA-Z0-9]/g, '');\n            } else if (dataLabel == '$SFO2') {\n                if (!result.indirectFrequency) result.indirectFrequency = parseFloat(dataValue);\n\n            } else if (dataLabel == '$OFFSET') {   // OFFSET for Bruker spectra\n                result.shiftOffsetNum = 0;\n                if (!result.shiftOffsetVal)  result.shiftOffsetVal = parseFloat(dataValue);\n            } else if (dataLabel == '$REFERENCEPOINT') {   // OFFSET for Varian spectra\n\n\n                // if we activate this part it does not work for ACD specmanager\n                //         } else if (dataLabel=='.SHIFTREFERENCE') {   // OFFSET FOR Bruker Spectra\n                //                 var parts = dataValue.split(/ *, */);\n                //                 result.shiftOffsetNum = parseInt(parts[2].trim());\n                //                 result.shiftOffsetVal = parseFloat(parts[3].trim());\n            } else if (dataLabel == 'VARNAME') {\n                ntuples.varname = dataValue.split(/[, \\t]+/);\n            } else if (dataLabel == 'SYMBOL') {\n                ntuples.symbol = dataValue.split(/[, \\t]+/);\n            } else if (dataLabel == 'VARTYPE') {\n                ntuples.vartype = dataValue.split(/[, \\t]+/);\n            } else if (dataLabel == 'VARFORM') {\n                ntuples.varform = dataValue.split(/[, \\t]+/);\n            } else if (dataLabel == 'VARDIM') {\n                ntuples.vardim = convertToFloatArray(dataValue.split(/[, \\t]+/));\n            } else if (dataLabel == 'UNITS') {\n                ntuples.units = dataValue.split(/[, \\t]+/);\n            } else if (dataLabel == 'FACTOR') {\n                ntuples.factor = convertToFloatArray(dataValue.split(/[, \\t]+/));\n            } else if (dataLabel == 'FIRST') {\n                ntuples.first = convertToFloatArray(dataValue.split(/[, \\t]+/));\n            } else if (dataLabel == 'LAST') {\n                ntuples.last = convertToFloatArray(dataValue.split(/[, \\t]+/));\n            } else if (dataLabel == 'MIN') {\n                ntuples.min = convertToFloatArray(dataValue.split(/[, \\t]+/));\n            } else if (dataLabel == 'MAX') {\n                ntuples.max = convertToFloatArray(dataValue.split(/[, \\t]+/));\n            } else if (dataLabel == '.NUCLEUS') {\n                if (result.twoD) {\n                    result.yType = dataValue.split(/[, \\t]+/)[0];\n                }\n            } else if (dataLabel == 'PAGE') {\n                spectrum.page = dataValue.trim();\n                spectrum.pageValue = parseFloat(dataValue.replace(/^.*=/, ''));\n                spectrum.pageSymbol = spectrum.page.replace(/=.*/, '');\n                var pageSymbolIndex = ntuples.symbol.indexOf(spectrum.pageSymbol);\n                var unit = '';\n                if (ntuples.units && ntuples.units[pageSymbolIndex]) {\n                    unit = ntuples.units[pageSymbolIndex];\n                }\n                if (result.indirectFrequency && unit != 'PPM') {\n                    spectrum.pageValue /= result.indirectFrequency;\n                }\n            } else if (dataLabel == 'RETENTIONTIME') {\n                spectrum.pageValue = parseFloat(dataValue);\n            } else if (dataLabel == 'XYDATA') {\n                prepareSpectrum(result, spectrum);\n                // well apparently we should still consider it is a PEAK TABLE if there are no '++' after\n                if (dataValue.match(/.*\\+\\+.*/)) {\n                    parseXYData(spectrum, dataValue, result);\n                } else {\n                    parsePeakTable(spectrum, dataValue, result);\n                }\n                spectra.push(spectrum);\n                spectrum = {};\n            } else if (dataLabel == 'PEAKTABLE') {\n                prepareSpectrum(result, spectrum);\n                parsePeakTable(spectrum, dataValue, result);\n                spectra.push(spectrum);\n                spectrum = {};\n            } else if (isMSField(dataLabel)) {\n                spectrum[convertMSFieldToLabel(dataLabel)] = dataValue;\n            } else if (dataLabel.match(keepRecordsRegExp)) {\n                result.info[dataLabel] = dataValue.trim();\n            }\n        }\n\n        // Currently disabled\n        //    if (options && options.lowRes) addLowRes(spectra,options);\n\n        if (result.profiling) result.profiling.push({action: 'Finished parsing', time: new Date() - start});\n\n        if (result.twoD) {\n            add2D(result);\n            if (result.profiling) result.profiling.push({\n                action: 'Finished countour plot calculation',\n                time: new Date() - start\n            });\n            if (!options.keepSpectra) {\n                delete result.spectra;\n            }\n        }\n\n\n        // maybe it is a GC (HPLC) / MS. In this case we add a new format\n        if (spectra.length > 1 && spectra[0].dataType.toLowerCase().match(/.*mass./)) {\n            addGCMS(result);\n            if (result.profiling) result.profiling.push({\n                action: 'Finished GCMS calculation',\n                time: new Date() - start\n            });\n        }\n\n\n        if (options.xy) { // the spectraData should not be a oneD array but an object with x and y\n            if (spectra.length > 0) {\n                for (var i=0; i<spectra.length; i++) {\n                    var spectrum=spectra[i];\n                    if (spectrum.data.length>0) {\n                        for (var j=0; j<spectrum.data.length; j++) {\n                            var data=spectrum.data[j];\n                            var newData={x:Array(data.length/2), y:Array(data.length/2)};\n                            for (var k=0; k<data.length; k=k+2) {\n                                newData.x[k/2]=data[k];\n                                newData.y[k/2]=data[k+1];\n                            }\n                            spectrum.data[j]=newData;\n                        }\n\n                    }\n\n                }\n            }\n        }\n\n        if (result.profiling) {\n            result.profiling.push({action: 'Total time', time: new Date() - start});\n        }\n\n        //   console.log(result);\n        //    console.log(JSON.stringify(spectra));\n        return result;\n\n    }\n\n\n    function convertMSFieldToLabel(value) {\n        return value.toLowerCase().replace(/[^a-z0-9]/g, '');\n    }\n\n    function isMSField(dataLabel) {\n        for (var i = 0; i < GC_MS_FIELDS.length; i++) {\n            if (dataLabel == GC_MS_FIELDS[i]) return true;\n        }\n        return false;\n    }\n\n    function addGCMS(result) {\n        var spectra = result.spectra;\n        var existingGCMSFields = [];\n        var i;\n        for (i = 0; i < GC_MS_FIELDS.length; i++) {\n            var label = convertMSFieldToLabel(GC_MS_FIELDS[i]);\n            if (spectra[0][label]) {\n                existingGCMSFields.push(label);\n            }\n        }\n        var gcms = {};\n        gcms.gc = {};\n        gcms.ms = [];\n        for (i = 0; i < existingGCMSFields.length; i++) {\n            gcms.gc[existingGCMSFields[i]] = [];\n        }\n        for (i = 0; i < spectra.length; i++) {\n            var spectrum = spectra[i];\n            for (var j = 0; j < existingGCMSFields.length; j++) {\n                gcms.gc[existingGCMSFields[j]].push(spectrum.pageValue);\n                gcms.gc[existingGCMSFields[j]].push(parseFloat(spectrum[existingGCMSFields[j]]));\n            }\n            if (spectrum.data) gcms.ms[i] = spectrum.data[0];\n\n        }\n        result.gcms = gcms;\n    }\n\n    function prepareSpectrum(result, spectrum) {\n        if (!spectrum.xFactor) spectrum.xFactor = 1;\n        if (!spectrum.yFactor) spectrum.yFactor = 1;\n        if (spectrum.observeFrequency) {\n            if (spectrum.xUnit && spectrum.xUnit.toUpperCase() == 'HZ') {\n                spectrum.xUnit = 'PPM';\n                spectrum.xFactor = spectrum.xFactor / spectrum.observeFrequency;\n                spectrum.firstX = spectrum.firstX / spectrum.observeFrequency;\n                spectrum.lastX = spectrum.lastX / spectrum.observeFrequency;\n                spectrum.deltaX = spectrum.deltaX / spectrum.observeFrequency;\n            }\n        }\n        if (result.shiftOffsetVal) {\n            var shift = spectrum.firstX - result.shiftOffsetVal;\n            spectrum.firstX = spectrum.firstX - shift;\n            spectrum.lastX = spectrum.lastX - shift;\n        }\n    }\n\n    function parsePeakTable(spectrum, value, result) {\n        spectrum.isPeaktable=true;\n        var i, ii, j, jj, values;\n        var currentData = [];\n        spectrum.data = [currentData];\n\n        // counts for around 20% of the time\n        var lines = value.split(/,? *,?[;\\r\\n]+ */);\n\n        var k = 0;\n        for (i = 1, ii = lines.length; i < ii; i++) {\n            values = lines[i].trim().replace(removeCommentRegExp, '').split(peakTableSplitRegExp);\n            if (values.length % 2 == 0) {\n                for (j = 0, jj = values.length; j < jj; j = j + 2) {\n                    // takes around 40% of the time to add and parse the 2 values nearly exclusively because of parseFloat\n                    currentData[k++] = (parseFloat(values[j]) * spectrum.xFactor);\n                    currentData[k++] = (parseFloat(values[j + 1]) * spectrum.yFactor);\n                }\n            } else {\n                result.logs.push('Format error: ' + values);\n            }\n        }\n    }\n\n    function parseXYData(spectrum, value, result) {\n        // we check if deltaX is defined otherwise we calculate it\n        if (!spectrum.deltaX) {\n            spectrum.deltaX = (spectrum.lastX - spectrum.firstX) / (spectrum.nbPoints - 1);\n        }\n\n        spectrum.isXYdata=true;\n\n        var currentData = [];\n        spectrum.data = [currentData];\n\n        var currentX = spectrum.firstX;\n        var currentY = spectrum.firstY;\n        var lines = value.split(/[\\r\\n]+/);\n        var lastDif, values, ascii, expectedY;\n        values = [];\n        for (var i = 1, ii = lines.length; i < ii; i++) {\n            //var previousValues=JSON.parse(JSON.stringify(values));\n            values = lines[i].trim().replace(removeCommentRegExp, '').split(xyDataSplitRegExp);\n            if (values.length > 0) {\n                if (DEBUG) {\n                    if (!spectrum.firstPoint) {\n                        spectrum.firstPoint = parseFloat(values[0]);\n                    }\n                    var expectedCurrentX = parseFloat(values[0] - spectrum.firstPoint) * spectrum.xFactor + spectrum.firstX;\n                    if ((lastDif || lastDif == 0)) {\n                        expectedCurrentX += spectrum.deltaX;\n                    }\n                    result.logs.push('Checking X value: currentX: ' + currentX + ' - expectedCurrentX: ' + expectedCurrentX);\n                }\n                for (var j = 1, jj = values.length; j < jj; j++) {\n                    if (j == 1 && (lastDif || lastDif == 0)) {\n                        lastDif = null; // at the beginning of each line there should be the full value X / Y so the diff is always undefined\n                        // we could check if we have the expected Y value\n                        ascii = values[j].charCodeAt(0);\n\n                        if (false) { // this code is just to check the jcamp DIFDUP and the next line repeat of Y value\n                            // + - . 0 1 2 3 4 5 6 7 8 9\n                            if ((ascii == 43) || (ascii == 45) || (ascii == 46) || ((ascii > 47) && (ascii < 58))) {\n                                expectedY = parseFloat(values[j]);\n                            } else\n                            // positive SQZ digits @ A B C D E F G H I (ascii 64-73)\n                            if ((ascii > 63) && (ascii < 74)) {\n                                // we could use parseInt but parseFloat is faster at least in Chrome\n                                expectedY = parseFloat(String.fromCharCode(ascii - 16) + values[j].substring(1));\n                            } else\n                            // negative SQZ digits a b c d e f g h i (ascii 97-105)\n                            if ((ascii > 96) && (ascii < 106)) {\n                                // we could use parseInt but parseFloat is faster at least in Chrome\n                                expectedY = -parseFloat(String.fromCharCode(ascii - 48) + values[j].substring(1));\n                            }\n                            if (expectedY != currentY) {\n                                result.logs.push('Y value check error: Found: ' + expectedY + ' - Current: ' + currentY);\n                                result.logs.push('Previous values: ' + previousValues.length);\n                                result.logs.push(previousValues);\n                            }\n                        }\n                    } else {\n                        if (values[j].length > 0) {\n                            ascii = values[j].charCodeAt(0);\n                            // + - . 0 1 2 3 4 5 6 7 8 9\n                            if ((ascii == 43) || (ascii == 45) || (ascii == 46) || ((ascii > 47) && (ascii < 58))) {\n                                lastDif = null;\n                                currentY = parseFloat(values[j]);\n                                currentData.push(currentX, currentY * spectrum.yFactor);;\n                                currentX += spectrum.deltaX;\n                            } else\n                            // positive SQZ digits @ A B C D E F G H I (ascii 64-73)\n                            if ((ascii > 63) && (ascii < 74)) {\n                                lastDif = null;\n                                currentY = parseFloat(String.fromCharCode(ascii - 16) + values[j].substring(1));\n                                currentData.push(currentX, currentY * spectrum.yFactor);;\n                                currentX += spectrum.deltaX;\n                            } else\n                            // negative SQZ digits a b c d e f g h i (ascii 97-105)\n                            if ((ascii > 96) && (ascii < 106)) {\n                                lastDif = null;\n                                currentY = -parseFloat(String.fromCharCode(ascii - 48) + values[j].substring(1));\n                                currentData.push(currentX, currentY * spectrum.yFactor);;\n                                currentX += spectrum.deltaX;\n                            } else\n\n\n\n                            // DUP digits S T U V W X Y Z s (ascii 83-90, 115)\n                            if (((ascii > 82) && (ascii < 91)) || (ascii == 115)) {\n                                var dup = parseFloat(String.fromCharCode(ascii - 34) + values[j].substring(1)) - 1;\n                                if (ascii == 115) {\n                                    dup = parseFloat('9' + values[j].substring(1)) - 1;\n                                }\n                                for (var l = 0; l < dup; l++) {\n                                    if (lastDif) {\n                                        currentY = currentY + lastDif;\n                                    }\n                                    currentData.push(currentX, currentY * spectrum.yFactor);;\n                                    currentX += spectrum.deltaX;\n                                }\n                            } else\n                            // positive DIF digits % J K L M N O P Q R (ascii 37, 74-82)\n                            if (ascii == 37) {\n                                lastDif = parseFloat('0' + values[j].substring(1));\n                                currentY += lastDif;\n                                currentData.push(currentX, currentY * spectrum.yFactor);;\n                                currentX += spectrum.deltaX;\n                            } else if ((ascii > 73) && (ascii < 83)) {\n                                lastDif = parseFloat(String.fromCharCode(ascii - 25) + values[j].substring(1));\n                                currentY += lastDif;\n                                currentData.push(currentX, currentY * spectrum.yFactor);;\n                                currentX += spectrum.deltaX;\n                            } else\n                            // negative DIF digits j k l m n o p q r (ascii 106-114)\n                            if ((ascii > 105) && (ascii < 115)) {\n                                lastDif = -parseFloat(String.fromCharCode(ascii - 57) + values[j].substring(1));\n                                currentY += lastDif;\n                                currentData.push(currentX, currentY * spectrum.yFactor);;\n                                currentX += spectrum.deltaX;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n    }\n\n    function convertTo3DZ(spectra) {\n        var noise = 0;\n        var minZ = spectra[0].data[0][0];\n        var maxZ = minZ;\n        var ySize = spectra.length;\n        var xSize = spectra[0].data[0].length / 2;\n        var z = new Array(ySize);\n        for (var i = 0; i < ySize; i++) {\n            z[i] = new Array(xSize);\n            for (var j = 0; j < xSize; j++) {\n                z[i][j] = spectra[i].data[0][j * 2 + 1];\n                if (z[i][j] < minZ) minZ = spectra[i].data[0][j * 2 + 1];\n                if (z[i][j] > maxZ) maxZ = spectra[i].data[0][j * 2 + 1];\n                if (i != 0 && j != 0) {\n                    noise += Math.abs(z[i][j] - z[i][j - 1]) + Math.abs(z[i][j] - z[i - 1][j]);\n                }\n            }\n        }\n        return {\n            z: z,\n            minX: spectra[0].data[0][0],\n            maxX: spectra[0].data[0][spectra[0].data[0].length - 2],\n            minY: spectra[0].pageValue,\n            maxY: spectra[ySize - 1].pageValue,\n            minZ: minZ,\n            maxZ: maxZ,\n            noise: noise / ((ySize - 1) * (xSize - 1) * 2)\n        };\n\n    }\n\n    function add2D(result) {\n        var zData = convertTo3DZ(result.spectra);\n        result.contourLines = generateContourLines(zData);\n        delete zData.z;\n        result.minMax = zData;\n    }\n\n\n    function generateContourLines(zData, options) {\n        //console.time('generateContourLines');\n        var noise = zData.noise;\n        var z = zData.z;\n        var contourLevels = [];\n        var nbLevels = 7;\n        var povarHeight = new Float32Array(4);\n        var isOver = [];\n        var nbSubSpectra = z.length;\n        var nbPovars = z[0].length;\n        var pAx, pAy, pBx, pBy;\n\n        var x0 = zData.minX;\n        var xN = zData.maxX;\n        var dx = (xN - x0) / (nbPovars - 1);\n        var y0 = zData.minY;\n        var yN = zData.maxY;\n        var dy = (yN - y0) / (nbSubSpectra - 1);\n        var minZ = zData.minZ;\n        var maxZ = zData.maxZ;\n\n        //System.out.prvarln('y0 '+y0+' yN '+yN);\n        // -------------------------\n        // Povars attribution\n        //\n        // 0----1\n        // |  / |\n        // | /  |\n        // 2----3\n        //\n        // ---------------------d------\n\n        var lineZValue;\n        for (var level = 0; level < nbLevels * 2; level++) { // multiply by 2 for positif and negatif\n            var contourLevel = {};\n            contourLevels.push(contourLevel);\n            var side = level % 2;\n            if (side == 0) {\n                lineZValue = (maxZ - 5 * noise) * Math.exp(level / 2 - nbLevels) + 5 * noise;\n            } else {\n                lineZValue = -(maxZ - 5 * noise) * Math.exp(level / 2 - nbLevels) - 5 * noise;\n            }\n            var lines = [];\n            contourLevel.zValue = lineZValue;\n            contourLevel.lines = lines;\n\n            if (lineZValue <= minZ || lineZValue >= maxZ) continue;\n\n            for (var iSubSpectra = 0; iSubSpectra < nbSubSpectra - 1; iSubSpectra++) {\n                for (var povar = 0; povar < nbPovars - 1; povar++) {\n                    povarHeight[0] = z[iSubSpectra][povar];\n                    povarHeight[1] = z[iSubSpectra][povar + 1];\n                    povarHeight[2] = z[(iSubSpectra + 1)][povar];\n                    povarHeight[3] = z[(iSubSpectra + 1)][(povar + 1)];\n\n                    for (var i = 0; i < 4; i++) {\n                        isOver[i] = (povarHeight[i] > lineZValue);\n                    }\n\n                    // Example povar0 is over the plane and povar1 and\n                    // povar2 are below, we find the varersections and add\n                    // the segment\n                    if (isOver[0] != isOver[1] && isOver[0] != isOver[2]) {\n                        pAx = povar + (lineZValue - povarHeight[0]) / (povarHeight[1] - povarHeight[0]);\n                        pAy = iSubSpectra;\n                        pBx = povar;\n                        pBy = iSubSpectra + (lineZValue - povarHeight[0]) / (povarHeight[2] - povarHeight[0]);\n                        lines.push(pAx * dx + x0, pAy * dy + y0, pBx * dx + x0, pBy * dy + y0);\n                    }\n                    if (isOver[3] != isOver[1] && isOver[3] != isOver[2]) {\n                        pAx = povar + 1;\n                        pAy = iSubSpectra + 1 - (lineZValue - povarHeight[3]) / (povarHeight[1] - povarHeight[3]);\n                        pBx = povar + 1 - (lineZValue - povarHeight[3]) / (povarHeight[2] - povarHeight[3]);\n                        pBy = iSubSpectra + 1;\n                        lines.push(pAx * dx + x0, pAy * dy + y0, pBx * dx + x0, pBy * dy + y0);\n                    }\n                    // test around the diagonal\n                    if (isOver[1] != isOver[2]) {\n                        pAx = povar + 1 - (lineZValue - povarHeight[1]) / (povarHeight[2] - povarHeight[1]);\n                        pAy = iSubSpectra + (lineZValue - povarHeight[1]) / (povarHeight[2] - povarHeight[1]);\n                        if (isOver[1] != isOver[0]) {\n                            pBx = povar + 1 - (lineZValue - povarHeight[1]) / (povarHeight[0] - povarHeight[1]);\n                            pBy = iSubSpectra;\n                            lines.push(pAx * dx + x0, pAy * dy + y0, pBx * dx + x0, pBy * dy + y0);\n                        }\n                        if (isOver[2] != isOver[0]) {\n                            pBx = povar;\n                            pBy = iSubSpectra + 1 - (lineZValue - povarHeight[2]) / (povarHeight[0] - povarHeight[2]);\n                            lines.push(pAx * dx + x0, pAy * dy + y0, pBx * dx + x0, pBy * dy + y0);\n                        }\n                        if (isOver[1] != isOver[3]) {\n                            pBx = povar + 1;\n                            pBy = iSubSpectra + (lineZValue - povarHeight[1]) / (povarHeight[3] - povarHeight[1]);\n                            lines.push(pAx * dx + x0, pAy * dy + y0, pBx * dx + x0, pBy * dy + y0);\n                        }\n                        if (isOver[2] != isOver[3]) {\n                            pBx = povar + (lineZValue - povarHeight[2]) / (povarHeight[3] - povarHeight[2]);\n                            pBy = iSubSpectra + 1;\n                            lines.push(pAx * dx + x0, pAy * dy + y0, pBx * dx + x0, pBy * dy + y0);\n                        }\n                    }\n                }\n            }\n        }\n        // console.timeEnd('generateContourLines');\n        return {\n            minX: zData.minX,\n            maxX: zData.maxX,\n            minY: zData.minY,\n            maxY: zData.maxY,\n            segments: contourLevels\n        };\n        //return contourLevels;\n    }\n\n\n    function addLowRes(spectra, options) {\n        var spectrum;\n        var averageX, averageY;\n        var targetNbPoints = options.lowRes;\n        var highResData;\n        for (var i = 0; i < spectra.length; i++) {\n            spectrum = spectra[i];\n            // we need to find the current higher resolution\n            if (spectrum.data.length > 0) {\n                highResData = spectrum.data[0];\n                for (var j = 1; j < spectrum.data.length; j++) {\n                    if (spectrum.data[j].length > highResData.length) {\n                        highResData = spectrum.data[j];\n                    }\n                }\n\n                if (targetNbPoints > (highResData.length / 2)) return;\n                var i, ii;\n                var lowResData = [];\n                var modulo = Math.ceil(highResData.length / (targetNbPoints * 2));\n                for (i = 0, ii = highResData.length; i < ii; i = i + 2) {\n                    if (i % modulo == 0) {\n                        lowResData.push(highResData[i], highResData[i + 1])\n                    }\n                }\n                spectrum.data.push(lowResData);\n            }\n        }\n    }\n\n    return convert;\n\n}\n\nvar convert = getConverter();\n\nfunction JcampConverter(input, options, useWorker) {\n    if (typeof options === 'boolean') {\n        useWorker = options;\n        options = {};\n    }\n    if (useWorker) {\n        return postToWorker(input, options);\n    } else {\n        return convert(input, options);\n    }\n}\n\nvar stamps = {},\n    worker;\n\nfunction postToWorker(input, options) {\n    if (!worker) {\n        createWorker();\n    }\n    return new Promise(function (resolve) {\n        var stamp = Date.now() + '' + Math.random();\n        stamps[stamp] = resolve;\n        worker.postMessage({stamp: stamp, input: input, options: options});\n    });\n}\n\nfunction createWorker() {\n    var workerURL = URL.createObjectURL(new Blob([\n        'var getConverter =' + getConverter.toString() + ';var convert = getConverter(); onmessage = function (event) { postMessage({stamp: event.data.stamp, output: convert(event.data.input, event.data.options)}); };'\n    ], {type: 'application/javascript'}));\n    worker = new Worker(workerURL);\n    URL.revokeObjectURL(workerURL);\n    worker.addEventListener('message', function (event) {\n        var stamp = event.data.stamp;\n        if (stamps[stamp]) {\n            stamps[stamp](event.data.output);\n        }\n    });\n}\n\nmodule.exports = {\n    convert: JcampConverter\n};\n},{}],3:[function(require,module,exports){\n'use strict';\n// https://github.com/accord-net/framework/blob/development/Sources/Accord.Statistics/Tools.cs\n\nfunction max(values) {\n    var max = -Infinity, l = values.length;\n    for (var i = 0; i < l; i++) {\n        if (values[i] > max) max = values[i];\n    }\n    return max;\n}\n\nfunction min(values) {\n    var min = Infinity, l = values.length;\n    for (var i = 0; i < l; i++) {\n        if (values[i] < min) min = values[i];\n    }\n    return min;\n}\n\nfunction minMax(values) {\n    var min = Infinity,\n        max = -Infinity,\n        l = values.length;\n    for (var i = 0; i < l; i++) {\n        if (values[i] < min) min = values[i];\n        if (values[i] > max) max = values[i];\n    }\n    return {\n        min: min,\n        max: max\n    };\n}\n\nfunction mean(values) {\n    var sum = 0, l = values.length;\n    for (var i = 0; i < l; i++)\n        sum += values[i];\n    return sum / l;\n}\n\nfunction geometricMean(values) {\n    var sum = 0, l = values.length;\n    for (var i = 0; i < l; i++)\n        sum *= values[i];\n    return Math.pow(sum, 1 / l);\n}\n\nfunction logGeometricMean(values) {\n    var lnsum = 0, l = values.length;\n    for (var i = 0; i < l; i++)\n        lnsum += Math.log(values[i]);\n    return lnsum / l;\n}\n\nfunction grandMean(means, samples) {\n    var sum = 0, n = 0, l = means.length;\n    for (var i = 0; i < l; i++) {\n        sum += samples[i] * means[i];\n        n += samples[i];\n    }\n    return sum / n;\n}\n\nfunction truncatedMean(values, percent, inPlace) {\n    if (typeof(inPlace) === 'undefined') inPlace = false;\n\n    values = inPlace ? values : values.slice();\n    values.sort();\n\n    var l = values.length;\n    var k = Math.floor(l * percent);\n\n    var sum = 0;\n    for (var i = k; i < l - k; i++)\n        sum += values[i];\n\n    return sum / (l - 2 * k);\n}\n\nfunction contraHarmonicMean(values, order) {\n    if (typeof(order) === 'undefined') order = 1;\n    var r1 = 0, r2 = 0, l = values.length;\n    for (var i = 0; i < l; i++) {\n        r1 += Math.pow(values[i], order + 1);\n        r2 += Math.pow(values[i], order);\n    }\n    return r1 / r2;\n}\n\nfunction standardDeviation(values, unbiased) {\n    return Math.sqrt(variance(values, unbiased));\n}\n\nfunction standardError(values) {\n    return standardDeviation(values) / Math.sqrt(values.length);\n}\n\nfunction median(values, alreadySorted) {\n    if (typeof(alreadySorted) === 'undefined') alreadySorted = false;\n    if (!alreadySorted) {\n        values = values.slice();\n        values.sort();\n    }\n\n    var l = values.length;\n    var half = Math.floor(l / 2);\n    if (l % 2 === 0)\n        return (values[half - 1] + values[half]) * 0.5;\n    return values[half];\n}\n\nfunction quartiles(values, alreadySorted) {\n    if (typeof(alreadySorted) === 'undefined') alreadySorted = false;\n    if (!alreadySorted) {\n        values = values.slice();\n        values.sort();\n    }\n\n    var quart = values.length / 4;\n    var q1 = values[Math.ceil(quart) - 1];\n    var q2 = median(values, true);\n    var q3 = values[Math.ceil(quart * 3) - 1];\n\n    return {q1: q1, q2: q2, q3: q3};\n}\n\nfunction variance(values, unbiased) {\n    if (typeof(unbiased) === 'undefined') unbiased = true;\n    var theMean = mean(values);\n    var theVariance = 0, l = values.length;\n\n    for (var i = 0; i < l; i++) {\n        var x = values[i] - theMean;\n        theVariance += x * x;\n    }\n\n    if (unbiased)\n        return theVariance / (l - 1);\n    else\n        return theVariance / l;\n}\n\nfunction pooledStandardDeviation(samples, unbiased) {\n    return Math.sqrt(pooledVariance(samples, unbiased));\n}\n\nfunction pooledVariance(samples, unbiased) {\n    if (typeof(unbiased) === 'undefined') unbiased = true;\n    var sum = 0;\n    var length = 0, l = samples.length;\n    for (var i = 0; i < l; i++) {\n        var values = samples[i];\n        var vari = variance(values);\n\n        sum += (values.length - 1) * vari;\n\n        if (unbiased)\n            length += values.length - 1;\n        else\n            length += values.length;\n    }\n    return sum / length;\n}\n\nfunction mode(values) {\n    var l = values.length,\n        itemCount = new Array(l),\n        i;\n    for (i = 0; i < l; i++) {\n        itemCount[i] = 0;\n    }\n    var itemArray = new Array(l);\n    var count = 0;\n\n    for (i = 0; i < l; i++) {\n        var index = itemArray.indexOf(values[i]);\n        if (index >= 0)\n            itemCount[index]++;\n        else {\n            itemArray[count] = values[i];\n            itemCount[count] = 1;\n            count++;\n        }\n    }\n\n    var maxValue = 0, maxIndex = 0;\n    for (i = 0; i < count; i++) {\n        if (itemCount[i] > maxValue) {\n            maxValue = itemCount[i];\n            maxIndex = i;\n        }\n    }\n\n    return itemArray[maxIndex];\n}\n\nfunction covariance(vector1, vector2, unbiased) {\n    if (typeof(unbiased) === 'undefined') unbiased = true;\n    var mean1 = mean(vector1);\n    var mean2 = mean(vector2);\n\n    if (vector1.length !== vector2.length)\n        throw \"Vectors do not have the same dimensions\";\n\n    var cov = 0, l = vector1.length;\n    for (var i = 0; i < l; i++) {\n        var x = vector1[i] - mean1;\n        var y = vector2[i] - mean2;\n        cov += x * y;\n    }\n\n    if (unbiased)\n        return cov / (l - 1);\n    else\n        return cov / l;\n}\n\nfunction skewness(values, unbiased) {\n    if (typeof(unbiased) === 'undefined') unbiased = true;\n    var theMean = mean(values);\n\n    var s2 = 0, s3 = 0, l = values.length;\n    for (var i = 0; i < l; i++) {\n        var dev = values[i] - theMean;\n        s2 += dev * dev;\n        s3 += dev * dev * dev;\n    }\n    var m2 = s2 / l;\n    var m3 = s3 / l;\n\n    var g = m3 / (Math.pow(m2, 3 / 2.0));\n    if (unbiased) {\n        var a = Math.sqrt(l * (l - 1));\n        var b = l - 2;\n        return (a / b) * g;\n    }\n    else {\n        return g;\n    }\n}\n\nfunction kurtosis(values, unbiased) {\n    if (typeof(unbiased) === 'undefined') unbiased = true;\n    var theMean = mean(values);\n    var n = values.length, s2 = 0, s4 = 0;\n\n    for (var i = 0; i < n; i++) {\n        var dev = values[i] - theMean;\n        s2 += dev * dev;\n        s4 += dev * dev * dev * dev;\n    }\n    var m2 = s2 / n;\n    var m4 = s4 / n;\n\n    if (unbiased) {\n        var v = s2 / (n - 1);\n        var a = (n * (n + 1)) / ((n - 1) * (n - 2) * (n - 3));\n        var b = s4 / (v * v);\n        var c = ((n - 1) * (n - 1)) / ((n - 2) * (n - 3));\n\n        return a * b - 3 * c;\n    }\n    else {\n        return m4 / (m2 * m2) - 3;\n    }\n}\n\nfunction entropy(values, eps) {\n    if (typeof(eps) === 'undefined') eps = 0;\n    var sum = 0, l = values.length;\n    for (var i = 0; i < l; i++)\n        sum += values[i] * Math.log(values[i] + eps);\n    return -sum;\n}\n\nfunction weightedMean(values, weights) {\n    var sum = 0, l = values.length;\n    for (var i = 0; i < l; i++)\n        sum += values[i] * weights[i];\n    return sum;\n}\n\nfunction weightedStandardDeviation(values, weights) {\n    return Math.sqrt(weightedVariance(values, weights));\n}\n\nfunction weightedVariance(values, weights) {\n    var theMean = weightedMean(values, weights);\n    var vari = 0, l = values.length;\n    var a = 0, b = 0;\n\n    for (var i = 0; i < l; i++) {\n        var z = values[i] - theMean;\n        var w = weights[i];\n\n        vari += w * (z * z);\n        b += w;\n        a += w * w;\n    }\n\n    return vari * (b / (b * b - a));\n}\n\nfunction center(values, inPlace) {\n    if (typeof(inPlace) === 'undefined') inPlace = false;\n\n    var result = values;\n    if (!inPlace)\n        result = values.slice();\n\n    var theMean = mean(result), l = result.length;\n    for (var i = 0; i < l; i++)\n        result[i] -= theMean;\n}\n\nfunction standardize(values, standardDev, inPlace) {\n    if (typeof(standardDev) === 'undefined') standardDev = standardDeviation(values);\n    if (typeof(inPlace) === 'undefined') inPlace = false;\n    var l = values.length;\n    var result = inPlace ? values : new Array(l);\n    for (var i = 0; i < l; i++)\n        result[i] = values[i] / standardDev;\n    return result;\n}\n\nfunction cumulativeSum(array) {\n    var l = array.length;\n    var result = new Array(l);\n    result[0] = array[0];\n    for (var i = 1; i < l; i++)\n        result[i] = result[i - 1] + array[i];\n    return result;\n}\n\nmodule.exports = {\n    min: min,\n    max: max,\n    minMax: minMax,\n    mean: mean,\n    geometricMean: geometricMean,\n    logGeometricMean: logGeometricMean,\n    grandMean: grandMean,\n    truncatedMean: truncatedMean,\n    contraHarmonicMean: contraHarmonicMean,\n    standardDeviation: standardDeviation,\n    standardError: standardError,\n    median: median,\n    quartiles: quartiles,\n    variance: variance,\n    pooledStandardDeviation: pooledStandardDeviation,\n    pooledVariance: pooledVariance,\n    mode: mode,\n    covariance: covariance,\n    skewness: skewness,\n    kurtosis: kurtosis,\n    entropy: entropy,\n    weightedMean: weightedMean,\n    weightedStandardDeviation: weightedStandardDeviation,\n    weightedVariance: weightedVariance,\n    center: center,\n    standardize: standardize,\n    cumulativeSum: cumulativeSum\n};\n\n},{}],4:[function(require,module,exports){\nvar FFT = require('./fftlib');\n\nvar FFTUtils= {\n    DEBUG : false,\n\n    /**\n     * Calculates the inverse of a 2D Fourier transform\n     *\n     * @param ft\n     * @param ftRows\n     * @param ftCols\n     * @return\n     */\n    ifft2DArray : function(ft, ftRows, ftCols){\n        var tempTransform = new Array(ftRows * ftCols);\n        var nRows = ftRows / 2;\n        var nCols = (ftCols - 1) * 2;\n        // reverse transform columns\n        FFT.init(nRows);\n        var tmpCols = {re: new Array(nRows), im: new Array(nRows)};\n        for (var iCol = 0; iCol < ftCols; iCol++) {\n            for (var iRow = nRows - 1; iRow >= 0; iRow--) {\n                tmpCols.re[iRow] = ft[(iRow * 2) * ftCols + iCol];\n                tmpCols.im[iRow] = ft[(iRow * 2 + 1) * ftCols + iCol];\n            }\n            //Unnormalized inverse transform\n            FFT.bt(tmpCols.re, tmpCols.im);\n            for (var iRow = nRows - 1; iRow >= 0; iRow--) {\n                tempTransform[(iRow * 2) * ftCols + iCol] = tmpCols.re[iRow];\n                tempTransform[(iRow * 2 + 1) * ftCols + iCol] = tmpCols.im[iRow];\n            }\n        }\n\n        // reverse row transform\n        var finalTransform = new Array(nRows * nCols);\n        FFT.init(nCols);\n        var tmpRows = {re: new Array(nCols), im: new Array(nCols)};\n        var scale = nCols * nRows;\n        for (var iRow = 0; iRow < ftRows; iRow += 2) {\n            tmpRows.re[0] = tempTransform[iRow * ftCols];\n            tmpRows.im[0] = tempTransform[(iRow + 1) * ftCols];\n            for (var iCol = 1; iCol < ftCols; iCol++) {\n                tmpRows.re[iCol] = tempTransform[iRow * ftCols + iCol];\n                tmpRows.im[iCol] = tempTransform[(iRow + 1) * ftCols + iCol];\n                tmpRows.re[nCols - iCol] = tempTransform[iRow * ftCols + iCol];\n                tmpRows.im[nCols - iCol] = -tempTransform[(iRow + 1) * ftCols + iCol];\n            }\n            //Unnormalized inverse transform\n            FFT.bt(tmpRows.re, tmpRows.im);\n\n            var indexB = (iRow / 2) * nCols;\n            for (var iCol = nCols - 1; iCol >= 0; iCol--) {\n                finalTransform[indexB + iCol] = tmpRows.re[iCol] / scale;\n            }\n        }\n        return finalTransform;\n    },\n    /**\n     * Calculates the fourier transform of a matrix of size (nRows,nCols) It is\n     * assumed that both nRows and nCols are a power of two\n     *\n     * On exit the matrix has dimensions (nRows * 2, nCols / 2 + 1) where the\n     * even rows contain the real part and the odd rows the imaginary part of the\n     * transform\n     * @param data\n     * @param nRows\n     * @param nCols\n     * @return\n     */\n    fft2DArray:function(data, nRows, nCols) {\n        var ftCols = (nCols / 2 + 1);\n        var ftRows = nRows * 2;\n        var tempTransform = new Array(ftRows * ftCols);\n        FFT.init(nCols);\n        // transform rows\n        var tmpRows = {re: new Array(nCols), im: new Array(nCols)};\n        var row1 = {re: new Array(nCols), im: new Array(nCols)}\n        var row2 = {re: new Array(nCols), im: new Array(nCols)}\n        var index, iRow0, iRow1, iRow2, iRow3;\n        for (var iRow = 0; iRow < nRows / 2; iRow++) {\n            index = (iRow * 2) * nCols;\n            tmpRows.re = data.slice(index, index + nCols);\n\n            index = (iRow * 2 + 1) * nCols;\n            tmpRows.im = data.slice(index, index + nCols);\n\n            FFT.fft1d(tmpRows.re, tmpRows.im);\n\n            this.reconstructTwoRealFFT(tmpRows, row1, row2);\n            //Now lets put back the result into the output array\n            iRow0 = (iRow * 4) * ftCols;\n            iRow1 = (iRow * 4 + 1) * ftCols;\n            iRow2 = (iRow * 4 + 2) * ftCols;\n            iRow3 = (iRow * 4 + 3) * ftCols;\n            for (var k = ftCols - 1; k >= 0; k--) {\n                tempTransform[iRow0 + k] = row1.re[k];\n                tempTransform[iRow1 + k] = row1.im[k];\n                tempTransform[iRow2 + k] = row2.re[k];\n                tempTransform[iRow3 + k] = row2.im[k];\n            }\n        }\n\n        //console.log(tempTransform);\n        row1 = null;\n        row2 = null;\n        // transform columns\n        var finalTransform = new Array(ftRows * ftCols);\n        FFT.init(nRows);\n        var tmpCols = {re: new Array(nRows), im: new Array(nRows)};\n        for (var iCol = ftCols - 1; iCol >= 0; iCol--) {\n            for (var iRow = nRows - 1; iRow >= 0; iRow--) {\n                tmpCols.re[iRow] = tempTransform[(iRow * 2) * ftCols + iCol];\n                tmpCols.im[iRow] = tempTransform[(iRow * 2 + 1) * ftCols + iCol];\n            }\n            FFT.fft1d(tmpCols.re, tmpCols.im);\n            for (var iRow = nRows - 1; iRow >= 0; iRow--) {\n                finalTransform[(iRow * 2) * ftCols + iCol] = tmpCols.re[iRow];\n                finalTransform[(iRow * 2 + 1) * ftCols + iCol] = tmpCols.im[iRow];\n            }\n        }\n\n        //console.log(finalTransform);\n        return finalTransform;\n\n    },\n    /**\n     *\n     * @param fourierTransform\n     * @param realTransform1\n     * @param realTransform2\n     *\n     * Reconstructs the individual Fourier transforms of two simultaneously\n     * transformed series. Based on the Symmetry relationships (the asterisk\n     * denotes the complex conjugate)\n     *\n     * F_{N-n} = F_n^{*} for a purely real f transformed to F\n     *\n     * G_{N-n} = G_n^{*} for a purely imaginary g transformed to G\n     *\n     */\n    reconstructTwoRealFFT:function(fourierTransform, realTransform1, realTransform2) {\n        var length = fourierTransform.re.length;\n\n        // the components n=0 are trivial\n        realTransform1.re[0] = fourierTransform.re[0];\n        realTransform1.im[0] = 0.0;\n        realTransform2.re[0] = fourierTransform.im[0];\n        realTransform2.im[0] = 0.0;\n        var rm, rp, im, ip, j;\n        for (var i = length / 2; i > 0; i--) {\n            j = length - i;\n            rm = 0.5 * (fourierTransform.re[i] - fourierTransform.re[j]);\n            rp = 0.5 * (fourierTransform.re[i] + fourierTransform.re[j]);\n            im = 0.5 * (fourierTransform.im[i] - fourierTransform.im[j]);\n            ip = 0.5 * (fourierTransform.im[i] + fourierTransform.im[j]);\n            realTransform1.re[i] = rp;\n            realTransform1.im[i] = im;\n            realTransform1.re[j] = rp;\n            realTransform1.im[j] = -im;\n            realTransform2.re[i] = ip;\n            realTransform2.im[i] = -rm;\n            realTransform2.re[j] = ip;\n            realTransform2.im[j] = rm;\n        }\n    },\n\n    /**\n     * In place version of convolute 2D\n     *\n     * @param ftSignal\n     * @param ftFilter\n     * @param ftRows\n     * @param ftCols\n     * @return\n     */\n    convolute2DI:function(ftSignal, ftFilter, ftRows, ftCols) {\n        var re, im;\n        for (var iRow = 0; iRow < ftRows / 2; iRow++) {\n            for (var iCol = 0; iCol < ftCols; iCol++) {\n                //\n                re = ftSignal[(iRow * 2) * ftCols + iCol]\n                * ftFilter[(iRow * 2) * ftCols + iCol]\n                - ftSignal[(iRow * 2 + 1) * ftCols + iCol]\n                * ftFilter[(iRow * 2 + 1) * ftCols + iCol];\n                im = ftSignal[(iRow * 2) * ftCols + iCol]\n                * ftFilter[(iRow * 2 + 1) * ftCols + iCol]\n                + ftSignal[(iRow * 2 + 1) * ftCols + iCol]\n                * ftFilter[(iRow * 2) * ftCols + iCol];\n                //\n                ftSignal[(iRow * 2) * ftCols + iCol] = re;\n                ftSignal[(iRow * 2 + 1) * ftCols + iCol] = im;\n            }\n        }\n    }\n}\n\nmodule.exports = FFTUtils;\n\n},{\"./fftlib\":12}],5:[function(require,module,exports){\nvar SD = require('./SD');\nvar PeakPicking = require('./PeakPicking');\nvar JcampConverter=require(\"jcampconverter\");\n\nfunction NMR(sd) {\n    SD.call(this, sd); // Héritage\n}\n\nNMR.prototype = Object.create(SD.prototype);\nNMR.prototype.constructor = NMR;\n\nNMR.fromJcamp = function(jcamp) {\n    var spectrum= JcampConverter.convert(jcamp,{xy:true,keepSpectra:true,keepRecordsRegExp:/^.+$/});\n    return new NMR(spectrum);\n}\n\n/**\n* Return the observed nucleus \n*/\nNMR.prototype.getNucleus=function(){\n    return this.sd.xType;\n}\n\n/**\n* Returns the solvent name\n*/\nNMR.prototype.getSolventName=function(){\n    return (this.sd.info[\".SOLVENTNAME\"]||this.sd.info[\"$SOLVENT\"]).replace(\"<\",\"\").replace(\">\",\"\");\n}\n\n//Returns the observe frequency in the direct dimension\nNMR.prototype.observeFrequencyX=function(){\n    return this.sd.spectra[0].observeFrequency;\n}\n\n/**\n* Returns the noise factor depending on the nucleus.\n*/\nNMR.prototype.getNMRPeakThreshold=function(nucleus) {\n    if (nucleus == \"1H\")\n        return 3.0;\n    if (nucleus ==\"13C\")\n        return 5.0;\n    return 1.0;\n}\n\n\n    \n/**\n * @function addNoise(SNR)\n * This function adds white noise to the the given spectraData. The intensity of the noise is \n * calculated from the given signal to noise ratio.\n * @param SNR Signal to noise ratio\n */\n NMR.prototype.addNoise=function(SNR) {\n     //@TODO Implement addNoise filter\n}\n\n\n/**\n * @function addSpectraDatas(spec2,factor1,factor2,autoscale )   \n *  This filter performs a linear combination of two spectraDatas.\n * A=spec1\n * B=spec2\n * After to apply this filter you will get:\n *      A=A*factor1+B*factor2\n * if autoscale is set to 'true' then you will obtain:\n *  A=A*factor1+B*k*factor2\n * Where the k is a factor such that the maximum peak in A is equal to the maximum peak in spectraData2 \n * @param spec2 spectraData2\n * @param factor1 linear factor for spec1\n * @param factor2 linear factor for spec2\n * @param autoscale Auto-adjust scales before combine the spectraDatas\n * @example spec1 = addSpectraDatas(spec1,spec2,1,-1, false) This subtract spec2 from spec1\n*/\nNMR.prototype.addSpectraDatas=function(spec2,factor1,factor2,autoscale ) {\n    //@TODO Implement addSpectraDatas filter\n}\n\n/**\n * @function autoBaseline()\n * Automatically corrects the base line of a given spectraData. After this process the spectraData\n * should have meaningful integrals.\n */\nNMR.prototype.autoBaseline=function( ) {\n    //@TODO Implement autoBaseline filter\n}\n\n/**\n * @function fourierTransform()\n * Fourier transforms the given spectraData (Note. no 2D handling yet) this spectraData have to be of type NMR_FID or 2DNMR_FID\n */\nNMR.prototype.fourierTransform=function( ) {\n    //@TODO Implement fourierTransform filter\n}\n\n/**\n * @function postFourierTransform(ph1corr)\n * This filter makes an phase 1 correction that corrects the problem of the spectra that has been obtained \n * on spectrometers using the Bruker digital filters. This method is used in cases when the BrukerSpectra \n * filter could not find the correct number of points to perform a circular shift.\n * The actual problem is that not all of the spectra has the necessary parameters for use only one method for \n * correcting the problem of the Bruker digital filters.\n * @param spectraData A fourier transformed spectraData.\n * @param ph1corr Phase 1 correction value in radians.\n */\nNMR.prototype.postFourierTransform=function(ph1corr) {\n    //@TODO Implement postFourierTransform filter\n}\n\n/**\n * @function zeroFilling(nPointsX [,nPointsY])\n * This function increase the size of the spectrum, filling the new positions with zero values. Doing it one \n * could increase artificially the spectral resolution.\n * @param nPointsX Number of new zero points in the direct dimension\n * @param nPointsY Number of new zero points in the indirect dimension\n */\nNMR.prototype.zeroFilling=function(nPointsX, nPointsY) {\n    //@TODO Implement zeroFilling filter\n}\n\n/**\n * @function  haarWhittakerBaselineCorrection(waveletScale,whittakerLambda)\n * Applies a baseline correction as described in J Magn Resonance 183 (2006) 145-151 10.1016/j.jmr.2006.07.013\n * The needed parameters are the wavelet scale and the lambda used in the whittaker smoother.\n * @param waveletScale To be described\n * @param whittakerLambda To be described\n */\nNMR.prototype.haarWhittakerBaselineCorrection=function(waveletScale,whittakerLambda) {\n    //@TODO Implement haarWhittakerBaselineCorrection filter\n}\n\n/**\n * @function whittakerBaselineCorrection(whittakerLambda,ranges)\n * Applies a baseline correction as described in J Magn Resonance 183 (2006) 145-151 10.1016/j.jmr.2006.07.013\n * The needed parameters are the Wavelet scale and the lambda used in the Whittaker smoother.\n * @param waveletScale To be described\n * @param whittakerLambda To be described\n * @param ranges A string containing the ranges of no signal.\n */\nNMR.prototype.whittakerBaselineCorrection=function(whittakerLambda,ranges) {\n    //@TODO Implement whittakerBaselineCorrection filter\n}\n\n/**\n * @function brukerSpectra(options)\n * This filter applies a circular shift(phase 1 correction in the time domain) to an NMR FID spectrum that \n * have been obtained on spectrometers using the Bruker digital filters. The amount of shift depends on the \n * parameters DECIM and DSPFVS. This spectraData have to be of type NMR_FID\n * @option DECIM: Acquisition parameter\n * @option DSPFVS: Acquisition parameter\n */\nNMR.prototype.brukerSpectra=function(options) {\n    //@TODO Implement brukerSpectra filter\n}\n\n/**\n * @function apodization(functionName, lineBroadening)\n * Apodization of a spectraData object.\n * @param spectraData An spectraData of type NMR_FID\n * @param functionName Valid values for functionsName are\n *  Exponential, exp\n *  Hamming, hamming\n *  Gaussian, gauss\n *  TRAF, traf\n *  Sine Bell, sb\n *  Sine Bell Squared, sb2\n * @param lineBroadening The parameter LB should either be a line broadening factor in Hz \n * or alternatively an angle given by degrees for sine bell functions and the like.\n * @example SD.apodization(, lineBroadening)\n */\nNMR.prototype.apodization=function(functionName, lineBroadening) {\n    //@TODO Implement apodization filter\n}\n\n/**\n * @function echoAntiechoFilter();\n * That decodes an Echo-Antiecho 2D spectrum.\n */\nNMR.prototype.echoAntiechoFilter=function() {\n    //@TODO Implement echoAntiechoFilter filter\n}\n\n/**\n * @function SNVFilter()\n * This function apply a Standard Normal Variate Transformation over the given spectraData. Mainly used for IR spectra.\n */\nNMR.prototype.SNVFilter=function() {\n    //@TODO Implement SNVFilter\n}\n\n/**\n * @function powerFilter(power)\n * This function applies a power to all the Y values.<br>If the power is less than 1 and the spectrum has negative values, it will be shifted so that the lowest value is zero \n * @param   power   The power to apply\n */\nNMR.prototype.powerFilter=function(power) {\n    var minY=this.getMinY();\n    if(power<1 && minY<0){\n        this.YShift(-1*minY);\n        console.warn(\"SD.powerFilter: The spectrum had negative values and was automatically shifted before applying the function.\");\n    }\n    //@TODO Implement powerFilter\n}\n\n/**\n * @function logarithmFilter(base)\n * This function applies a log to all the Y values.<br>If the spectrum has negative or zero values, it will be shifted so that the lowest value is 1 \n * @param   base    The base to use\n */\nNMR.prototype.logarithmFilter=function(base) {\n    var minY=this.getMinY();\n    if(minY<=0){\n        this.YShift((-1*minY)+1);\n        console.warn(\"SD.logarithmFilter: The spectrum had negative values and was automatically shifted before applying the function.\");\n    }\n   //@TODO Implement logarithmFilter filter\n}\n\n\n/**\n * @function correlationFilter(func) \n * This function correlates the given spectraData with the given vector func. The correlation\n * operation (*) is defined as:\n * \n *                    __ inf\n *  c(x)=f(x)(*)g(x)= \\        f(x)*g(x+i)\n *                   ./    \n *                    -- i=-inf\n * @param func A double array containing the function to correlates the spectraData\n * @example var smoothedSP = SD.correlationFilter(spectraData,[1,1]) returns a smoothed version of the\n * given spectraData. \n */\nNMR.prototype.correlationFilter=function(func) {\n    //@TODO Implement correlationFilter filter\n}\n\n/**\n * @function  phaseCorrection(phi0, phi1)\n * Applies the phase correction (phi0,phi1) to a Fourier transformed spectraData. The angles must be given in radians.\n * @param phi0 Zero order phase correction\n * @param phi1 One order phase correction\n*/\nNMR.prototype.phaseCorrection=function(phi0, phi1) {\n    //@TODO Implement phaseCorrection filter\n}\n\n/**\n * @function automaticPhase() \n * This function determines automatically the correct parameters phi0 and phi1 for a phaseCorrection\n * function and applies it.\n */ \nNMR.prototype.automaticPhase=function() {\n    //@TODO Implement automaticPhase filter\n}\n\n/**\n *  @function useBrukerPhase()\n *  This function extract the parameters of the phaseCorrection from the jcamp-dx parameters\n *  if the spectrum was acquired in Bruker spectrometers . Basically it will look for the parameters\n *  $PHC0 and $PHC1, and will use it to call the phaseCorrection function.\n */\nNMR.prototype.useBrukerPhase=function() {\n   //@TODO Implement useBrukerPhase filter\n}\n\n/**\n * @function nmrPeakDetection(parameters);\n * This function process the given spectraData and tries to determine the NMR signals. Returns an NMRSignal1D array containing all the detected 1D-NMR Signals\n * @param parameters A JSONObject containing the optional parameters:\n * @option fromX:   Lower limit.\n * @option toX:     Upper limit.\n * @option threshold: The minimum intensity to consider a peak as a signal, expressed as a percentage of the highest peak. \n * @option stdev: Number of standard deviation of the noise for the threshold calculation if a threshold is not specified.\n */\nNMR.prototype.nmrPeakDetection=function(parameters) {\n    parameters=parameters||{};\n    if(!parameters.nH)\n        parameters.nH=10;\n    return PeakPicking.peakPicking(this, parameters.nH, this.getSolventName());\n}\n\n/**\n * @function toJcamp(options)\n * This function creates a String that represents the given spectraData in the format JCAM-DX 5.0\n * The X,Y data can be compressed using one of the methods described in: \n * \"JCAMP-DX. A STANDARD FORMAT FOR THE EXCHANGE OF ION MOBILITY SPECTROMETRY DATA\", \n *  http://www.iupac.org/publications/pac/pdf/2001/pdf/7311x1765.pdf\n * @option encode: ['FIX','SQZ','DIF','DIFDUP','CVS','PAC'] (Default: 'FIX')\n * @option yfactor: The YFACTOR. It allows to compress the data by removing digits from the ordinate. (Default: 1)\n * @option type: [\"NTUPLES\", \"SIMPLE\"] (Default: \"SIMPLE\")\n * @option keep: A set of user defined parameters of the given SpectraData to be stored in the jcamp.\n * @example SD.toJcamp(spectraData,{encode:'DIFDUP',yfactor:0.01,type:\"SIMPLE\",keep:['#batchID','#url']});\n */ \nNMR.prototype.toJcamp=function(options) {\n     //@TODO Implement toJcamp filter\n     return \"NOT ImplementED\"\n}\n\n\nmodule.exports = NMR;\n\n},{\"./PeakPicking\":8,\"./SD\":10,\"jcampconverter\":2}],6:[function(require,module,exports){\nvar SD = require('./SD');\nvar PeakPicking2D = require('./PeakPicking2D');\nvar JcampConverter=require(\"jcampconverter\");\n\nfunction NMR2D(sd) {\n    SD.call(this, sd); // Héritage\n}\n\nNMR2D.prototype = Object.create(SD.prototype);\nNMR2D.prototype.constructor = NMR2D;\n\nNMR2D.fromJcamp = function(jcamp) {\n    var spectrum= JcampConverter.convert(jcamp,{xy:true,keepSpectra:true});\n    return new NMR2D(spectrum);\n}\n\nNMR2D.prototype.isHomoNuclear=function(){\n    return this.sd.xType==this.sd.yType;\n}\n\n//Returns the observe frequency in the direct dimension\nNMR2D.prototype.observeFrequencyX=function(){\n    return this.sd.spectra[0].observeFrequency;\n}\n\n//Returns the observe frequency in the indirect dimension\nNMR2D.prototype.observeFrequencyY=function(){\n    return this.sd.indirectFrequency;\n}\n\n/**\n * Returns the solvent name\n */\nNMR2D.prototype.getSolventName=function(){\n    return (this.sd.info[\".SOLVENTNAME\"]||this.sd.info[\"$SOLVENT\"]).replace(\"<\",\"\").replace(\">\",\"\");\n}\n/**\n * Overwrite this function. Now, the Y axe refers to the indirect dimension\n * @returns {sd.minMax.maxY}\n */\nNMR2D.prototype.getLastY = function(){\n    return this.sd.minMax.maxY;\n}\n/**\n * * Overwrite this function. Now, the Y axe refers to the indirect dimension\n * @returns {sd.minMax.minY}\n */\nNMR2D.prototype.getFirstY = function(){\n    return this.sd.minMax.minY;\n}\n\n//Returns the separation between 2 consecutive points in the indirect domain\nNMR2D.prototype.getDeltaY=function(){\n    return ( this.getLastY()-this.getFirstY()) / (this.getNbSubSpectra()-1);\n}\n\n/**\n * @function nmrPeakDetection2D(options)\n * This function process the given spectraData and tries to determine the NMR signals. \n + Returns an NMRSignal2D array containing all the detected 2D-NMR Signals\n * @param\toptions:+Object\t\t\tObject containing the options\n * @option\tthresholdFactor:number\tA factor to scale the automatically determined noise threshold.\n * @returns\t+Object\tset of NMRSignal2D\n */\nNMR2D.prototype.nmrPeakDetection2D=function(options){\n    options = options||{};\n    if(!options.thresholdFactor)\n        options.thresholdFactor=1;\n    return PeakPicking2D.findPeaks2D(this, options.thresholdFactor);\n}\n\n/**\n* Returns the noise factor depending on the nucleus.\n*/\nNMR2D.prototype.getNMRPeakThreshold=function(nucleus) {\n    if (nucleus == \"1H\")\n        return 3.0;\n    if (nucleus ==\"13C\")\n        return 5.0;\n    return 1.0;\n}\n\n/**\n* Returns the nucleus in the specified dimension\n*/\nNMR2D.prototype.getNucleus=function(dim){\n    if(dim==1)\n        return this.sd.xType;\n    if(dim==2)\n        return this.sd.yType;\n    return this.sd.xType;\n}\n\nmodule.exports = NMR2D;\n\n},{\"./PeakPicking2D\":9,\"./SD\":10,\"jcampconverter\":2}],7:[function(require,module,exports){\nvar PeakOptimizer={\n\tdiagonalError:0.05,\n\ttolerance:0.05,\n\tDEBUG:false,\n    toleranceX : 0.025,\n    toleranceY : 0.5,\n\n    clean: function(peaks, threshold){\n        var max = Number.NEGATIVE_INFINITY;\n        var i,peak;\n        //double min = Double.MAX_VALUE;\n        for(i=peaks.length-1;i>=0;i--){\n            if(Math.abs(peaks[i].z)>max)\n                max=Math.abs(peaks[i].z);\n        }\n        max*=threshold;\n        for(i=peaks.length-1;i>=0;i--){\n            if(Math.abs(peaks[i].z)<max)\n                peaks.splice(i,1);\n        }\n        return peaks;\n    },\n\t\n\tenhanceSymmetry: function(signals){\n\t\t\n\t\tvar properties = this.initializeProperties(signals);\n\t\tvar output = signals;\n\n\t\tif(this.DEBUG)\n\t\t\tconsole.log(\"Before optimization size: \"+output.size());\n\t\t\n\t\t//First step of the optimization: Symmetry validation\n\t\tvar i,hits,index;\n\t\tvar signal;\n\t\tfor(i=output.length-1;i>=0;i--){\n\t\t\tsignal = output[i];\n\t\t\tif(signal.peaks.length>1)\n\t\t\t\tproperties[i][1]++;\n\t\t\tif(properties[i][0]==1){\n\t\t\t\tindex = this.exist(output, properties, signal,-1,true);\n\t\t\t\tif(index>=0){\n\t\t\t\t\tproperties[i][1]+=2;\n\t\t\t\t\tproperties[index][1]+=2;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t//Second step of the optimization: Diagonal image existence\n\t\tfor(i=output.length-1;i>=0;i--){\n\t\t\tsignal = output[i];\n\t\t\tif(properties[i][0]==0){\n\t\t\t\thits = this.checkCrossPeaks(output, properties, signal, true);\n\t\t\t\tproperties[i][1]+=hits;\n\t\t\t\t//checkCrossPeaks(output, properties, signal, false);\n\t\t\t}\n\t\t}\n\t\t\n\t\t//Now, each peak have a score between 0 and 4, we can complete the patterns which\n\t\t//contains peaks with high scores, and finally, we can remove peaks with scores 0 and 1\n\t\tvar count = 0;\n\t\tfor(i=output.length-1;i>=0;i--){\n\t\t\tif(properties[i][0]!==0&&properties[i][1]>2){\n\t\t\t\tcount++;\n\t\t\t\tcount+=this.completeMissingIfNeeded(output,properties,output[i],properties[i]);\n\t\t\t}\n\t\t\tif(properties[i][1]>=2&&properties[i][0]===0)\n\t\t\t\tcount++;\n\t\t}\n\t\t\n\t\tif(this.DEBUG)\n\t\t\tconsole.log(\"After optimization size: \"+count);\n\t\tvar  toReturn = new Array(count);\n\t\tcount--;\n\t\tfor(i=output.length-1;i>=0;i--){\n\t\t\tif(properties[i][0]!==0&&properties[i][1]>2\n\t\t\t\t\t||properties[i][0]===0&&properties[i][1]>1){\n\t\t\t\ttoReturn[count--]=output[i];\n\t\t\t}\n\t\t\telse{\n\t\t\t\tconsole.log(\"Removed \"+i+\" \"+output[i].peaks.length);\n\t\t\t}\n\t\t\t//if(properties.get(i)[1]>=2)\n\t\t\t//\ttoReturn[count--]=output.get(i);\n\t\t}\n\t\treturn toReturn;\n\t},\n\t\n\tcompleteMissingIfNeeded: function(output, properties, thisSignal, thisProp) {\n\t\t//Check for symmetry\n\t\tvar index = this.exist(output, properties, thisSignal,-thisProp[0],true);\n\t\tvar addedPeaks=0;\n\t\tvar newSignal = null, tmpProp=null;\n\t\tif(index<0){//If this signal have no a symmetry image, we have to include it\n\t\t\tnewSignal = {nucleusX:thisSignal.nucleusX,nucleusY:thisSignal.nucleusY};\n\t\t\tnewSignal.resolutionX=thisSignal.resolutionX;\n\t\t\tnewSignal.resolutionY=thisSignal.resolutionY;\n\t\t\tnewSignal.shiftX=thisSignal.shiftY;\n\t\t\tnewSignal.shiftY=thisSignal.shiftX;\n\t\t\tnewSignal.peaks = [{x:thisSignal.shiftY,y:thisSignal.shiftX,z:1}];\n\t\t\toutput.push(newSignal);\n\t\t\ttmpProp = [-thisProp[0],thisProp[1]];\n\t\t\tproperties.push(tmpProp);\n\t\t\taddedPeaks++;\n\t\t}\n\t\t//Check for diagonal peaks\n\t\tvar j=0;\n\t\tvar diagX=false, diagY=false;\n\t\tvar signal;\n\t\tfor(j=output.length-1;j>=0;j--){\n\t\t\tsignal = output[j];\n\t\t\tif(properties[j][0]===0){\n\t\t\t\tif(Math.abs(signal.shiftX-thisSignal.shiftX)<this.diagonalError)\n\t\t\t\t\tdiagX=true;\n\t\t\t\tif(Math.abs(signal.shiftY-thisSignal.shiftY)<this.diagonalError)\n\t\t\t\t\tdiagY=true;\n\t\t\t}\n\t\t}\n\t\tif(diagX===false){\n\t\t\tnewSignal = {nucleusX:thisSignal.nucleusX,nucleusY:thisSignal.nucleusY};\n\t\t\tnewSignal.resolutionX=thisSignal.resolutionX;\n\t\t\tnewSignal.resolutionY=thisSignal.resolutionY;\n\t\t\tnewSignal.shiftX=thisSignal.shiftX;\n\t\t\tnewSignal.shiftY=thisSignal.shiftX;\n\t\t\tnewSignal.peaks = [{x:thisSignal.shiftX,y:thisSignal.shiftX,z:1}];\n\t\t\toutput.push(newSignal);\n\t\t\ttmpProp = [0,thisProp[1]];\n\t\t\tproperties.push(tmpProp);\n\t\t\taddedPeaks++;\n\t\t}\n\t\tif(diagY===false){\n\t\t\tnewSignal = {nucleusX:thisSignal.nucleusX,nucleusY:thisSignal.nucleusY};\n\t\t\tnewSignal.resolutionX=thisSignal.resolutionX;\n\t\t\tnewSignal.resolutionY=thisSignal.resolutionY;\n\t\t\tnewSignal.shiftX=thisSignal.shiftY;\n\t\t\tnewSignal.shiftY=thisSignal.shiftY;\n\t\t\tnewSignal.peaks = [{x:thisSignal.shiftY,y:thisSignal.shiftY,z:1}];\n\t\t\toutput.push(newSignal);\n\t\t\ttmpProp = [0,thisProp[1]];\n\t\t\tproperties.push(tmpProp);\n\t\t\taddedPeaks++;\n\t\t}\n\t\treturn addedPeaks;\n\t\t\n\t},\n\t\n\t//Check for any diagonal peak that match this cross peak\n\tcheckCrossPeaks: function(output, properties, signal, updateProperties) {\n\t\tvar hits = 0, i=0, shift=signal.shiftX*4;\n\t\tvar crossPeaksX = [],crossPeaksY = [];\n\t\tvar cross;\n\t\tfor(i=output.length-1;i>=0;i--){\n\t\t\tcross = output[i];\n\t\t\tif(properties[i][0]!==0){\n\t\t\t\tif(Math.abs(cross.shiftX-signal.shiftX)<this.diagonalError){\n\t\t\t\t\thits++;\n\t\t\t\t\tif(updateProperties)\n\t\t\t\t\t\tproperties[i][1]++;\n\t\t\t\t\tcrossPeaksX.push(i);\n\t\t\t\t\tshift+=cross.shiftX;\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tif(Math.abs(cross.shiftY-signal.shiftY)<this.diagonalError){\n\t\t\t\t\t\thits++;\n\t\t\t\t\t\tif(updateProperties)\n\t\t\t\t\t\t\tproperties[i][1]++;\n\t\t\t\t\t\tcrossPeaksY.push(i);\n\t\t\t\t\t\tshift+=cross.shiftY;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t//Update found crossPeaks and diagonal peak\n\t\tshift/=(crossPeaksX.length+crossPeaksY.length+4);\n\t\tif(crossPeaksX.length>0){\n\t\t\tfor( i=crossPeaksX.length-1;i>=0;i--){\n\t\t\t\toutput[crossPeaksX[i]].shiftX=shift;\n\t\t\t}\n\t\t}\n\t\tif(crossPeaksY.length>0){\n\t\t\tfor( i=crossPeaksY.length-1;i>=0;i--){\n\t\t\t\toutput[crossPeaksY[i]].shiftY=shift;\n\t\t\t}\n\t\t}\n\t\tsignal.shiftX=shift;\n\t\tsignal.shiftY=shift;\n\t\treturn hits;\n\t},\n\n\texist: function(output, properties, signal, type, symmetricSearch) {\n\t\tfor(var i=output.length-1;i>=0;i--){\n\t\t\tif(properties[i][0]==type){\n\t\t\t\tif(this.distanceTo(signal, output[i], symmetricSearch)<this.tolerance){\n\t\t\t\t\tif(!symmetricSearch){\n\t\t\t\t\t\tvar shiftX=(output[i].shiftX+signal.shiftX)/2.0;\n\t\t\t\t\t\tvar shiftY=(output[i].shiftY+signal.shiftY)/2.0;\n\t\t\t\t\t\toutput[i].shiftX=shiftX;\n\t\t\t\t\t\toutput[i].shiftY=shiftY;\n\t\t\t\t\t\tsignal.shiftX=shiftX;\n\t\t\t\t\t\tsignal.shiftY=shiftY;\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tvar shiftX=signal.shiftX;\n\t\t\t\t\t\tvar shiftY=output[i].shiftX;\n\t\t\t\t\t\toutput[i].shiftY=shiftX;\n\t\t\t\t\t\tsignal.shiftY=shiftY;\n\t\t\t\t\t}\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t},\n\t/**\n\t * We try to determine the position of each signal within the spectrum matrix.\n\t * Peaks could be of 3 types: upper diagonal, diagonal or under diagonal 1,0,-1\n\t * respectively.\n\t * @param Signals\n\t * @return A matrix containing the properties of each signal\n\t */\n\tinitializeProperties: function(signals){\n\t\tvar signalsProperties = new Array(signals.length);\n\t\tfor(var i=signals.length-1;i>=0;i--){\n\t\t\tsignalsProperties[i]=[0,0];\n\t\t\t//We check if it is a diagonal peak\n\t\t\tif(Math.abs(signals[i].shiftX-signals[i].shiftY)<=this.diagonalError){\n\t\t\t\tsignalsProperties[i][1]=1;\n\t\t\t\t//We adjust the x and y value to be symmetric.\n\t\t\t\t//In general chemical shift in the direct dimension is better than in the other one,\n\t\t\t\t//so, we believe more to the shiftX than to the shiftY.\n\t\t\t\tvar shift = (signals[i].shiftX*2+signals[i].shiftY)/3.0;\n\t\t\t\tsignals[i].shiftX=shift;\n\t\t\t\tsignals[i].shiftY=shift;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tif(signals[i].shiftX-signals[i].shiftY>0)\n\t\t\t\t\tsignalsProperties[i][0]=1;\n\t\t\t\telse\n\t\t\t\t\tsignalsProperties[i][0]=-1;\n\t\t\t}\n\t\t}\n\t\treturn signalsProperties;\n\t},\n\t\n\t/**\n\t * This function calculates the distance between 2 nmr signals . If toImage is true, \n\t * it will interchange x by y in the distance calculation for the second signal.\n\t */\n\tdistanceTo: function(a, b, toImage){\n\t\tif(!toImage){\n\t\t\treturn Math.sqrt(Math.pow(a.shiftX-b.shiftX, 2)\n\t\t\t\t\t+Math.pow(a.shiftY-b.shiftY, 2));\n\t\t}\n\t\telse{\n\t\t\treturn Math.sqrt(Math.pow(a.shiftX-b.shiftY, 2)\n\t\t\t\t\t+Math.pow(a.shiftY-b.shiftX, 2));\n\t\t}\n\t}\n};\n\nmodule.exports = PeakOptimizer;\n},{}],8:[function(require,module,exports){\n/**\n * Implementation of the peak pickig method described by Cobas in:\n * A new approach to improving automated analysis of proton NMR spectra\n * through Global Spectral Deconvolution (GSD)\n * http://www.spectroscopyeurope.com/images/stories/ColumnPDFs/TD_23_1.pdf\n */\nvar PeakPicking={\n    impurities:[],\n    maxJ:20,\n\n    peakPicking:function(spectrum, nH, solvent){\n        var peakList = this.GSD(spectrum);\n\n        //For now just return the peak List\n        //@TODO work in the peakPicking\n        return peakList;\n\n        /*var frequency = spectrum.observeFrequencyX();//getParamDouble(\"$BF1\",400);\n        var imp = this.labelPeaks(peakList, solvent, frequency);\n        return [peakList,imp];\n        */\n        //return createSignals(peakList,nH);\n    },\n\n    /**\n     * Should we read the impurities table from somewhere else?\n     */\n    init:function(){\n        this.impurities = [{\"impurities\":[{\"shifts\":[{\"proton\":\"X\",\"coupling\":0,\"multiplicity\":\"\",\"shift\":7.26}],\"name\":\"solvent_residual_peak\"},{\"shifts\":[{\"proton\":\"H2O\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":1.56}],\"name\":\"H2O\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":2.1}],\"name\":\"acetic_acid\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":2.17}],\"name\":\"acetone\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":2.1}],\"name\":\"acetonitrile\"},{\"shifts\":[{\"proton\":\"CH\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":7.36}],\"name\":\"benzene\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":1.28}],\"name\":\"tert-butyl_alcohol\"},{\"shifts\":[{\"proton\":\"CCH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":1.19},{\"proton\":\"OCH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":3.22}],\"name\":\"tert-butyl_methyl_ether\"},{\"shifts\":[{\"proton\":\"ArH\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":6.98},{\"proton\":\"OHc\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":5.01},{\"proton\":\"ArCH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":2.27},{\"proton\":\"ArC(CH3)3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":1.43}],\"name\":\"BHTb\"},{\"shifts\":[{\"proton\":\"CH\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":7.26}],\"name\":\"chloroform\"},{\"shifts\":[{\"proton\":\"CH2\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":1.43}],\"name\":\"cyclohexane\"},{\"shifts\":[{\"proton\":\"CH2\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":3.73}],\"name\":\"1,2-dichloroethane\"},{\"shifts\":[{\"proton\":\"CH2\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":5.3}],\"name\":\"dichloromethane\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":7,\"multiplicity\":\"t\",\"shift\":1.21},{\"proton\":\"CH2\",\"coupling\":7,\"multiplicity\":\"q\",\"shift\":3.48}],\"name\":\"diethyl_ether\"},{\"shifts\":[{\"proton\":\"CH2\",\"coupling\":0,\"multiplicity\":\"m\",\"shift\":3.65},{\"proton\":\"CH2\",\"coupling\":0,\"multiplicity\":\"m\",\"shift\":3.57},{\"proton\":\"OCH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":3.39}],\"name\":\"diglyme\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":3.4},{\"proton\":\"CH2\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":3.55}],\"name\":\"1,2-dimethoxyethane\"},{\"shifts\":[{\"proton\":\"CH3CO\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":2.09},{\"proton\":\"NCH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":3.02},{\"proton\":\"NCH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":2.94}],\"name\":\"dimethylacetamide\"},{\"shifts\":[{\"proton\":\"CH\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":8.02},{\"proton\":\"CH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":2.96},{\"proton\":\"CH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":2.88}],\"name\":\"dimethylformamide\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":2.62}],\"name\":\"dimethyl_sulfoxide\"},{\"shifts\":[{\"proton\":\"CH2\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":3.71}],\"name\":\"dioxane\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":7,\"multiplicity\":\"t\",\"shift\":1.25},{\"proton\":\"CH2\",\"coupling\":7,\"multiplicity\":\"q\",\"shift\":3.72},{\"proton\":\"OH\",\"coupling\":5,\"multiplicity\":\"s,t\",\"shift\":1.32}],\"name\":\"ethanol\"},{\"shifts\":[{\"proton\":\"CH3CO\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":2.05},{\"proton\":\"CH2CH3\",\"coupling\":7,\"multiplicity\":\"q\",\"shift\":4.12},{\"proton\":\"CH2CH3\",\"coupling\":7,\"multiplicity\":\"t\",\"shift\":1.26}],\"name\":\"ethyl_acetate\"},{\"shifts\":[{\"proton\":\"CH3CO\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":2.14},{\"proton\":\"CH2CH3\",\"coupling\":7,\"multiplicity\":\"q\",\"shift\":2.46},{\"proton\":\"CH2CH3\",\"coupling\":7,\"multiplicity\":\"t\",\"shift\":1.06}],\"name\":\"ethyl_methyl_ketone\"},{\"shifts\":[{\"proton\":\"CH\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":3.76}],\"name\":\"ethylene_glycol\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":0,\"multiplicity\":\"m\",\"shift\":0.86},{\"proton\":\"CH2\",\"coupling\":0,\"multiplicity\":\"br_s\",\"shift\":1.26}],\"name\":\"grease^f\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":0,\"multiplicity\":\"t\",\"shift\":0.88},{\"proton\":\"CH2\",\"coupling\":0,\"multiplicity\":\"m\",\"shift\":1.26}],\"name\":\"n-hexane\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":9.5,\"multiplicity\":\"d\",\"shift\":2.65}],\"name\":\"HMPAg\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":3.49},{\"proton\":\"OH\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":1.09}],\"name\":\"methanol\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":4.33}],\"name\":\"nitromethane\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":7,\"multiplicity\":\"t\",\"shift\":7},{\"proton\":\"CH2\",\"coupling\":0,\"multiplicity\":\"m\",\"shift\":1.27}],\"name\":\"n-pentane\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":6,\"multiplicity\":\"d\",\"shift\":1.22},{\"proton\":\"CH\",\"coupling\":6,\"multiplicity\":\"sep\",\"shift\":4.04}],\"name\":\"2-propanol\"},{\"shifts\":[{\"proton\":\"CH(2)\",\"coupling\":0,\"multiplicity\":\"m\",\"shift\":8.62},{\"proton\":\"CH(3)\",\"coupling\":0,\"multiplicity\":\"m\",\"shift\":7.29},{\"proton\":\"CH(4)\",\"coupling\":0,\"multiplicity\":\"m\",\"shift\":7.68}],\"name\":\"pyridine\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":0.07}],\"name\":\"silicone_greasei\"},{\"shifts\":[{\"proton\":\"CH2\",\"coupling\":0,\"multiplicity\":\"m\",\"shift\":1.85},{\"proton\":\"CH2O\",\"coupling\":0,\"multiplicity\":\"m\",\"shift\":3.76}],\"name\":\"tetrahydrofuran\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":2.36},{\"proton\":\"CH(o/p)\",\"coupling\":0,\"multiplicity\":\"m\",\"shift\":7.17},{\"proton\":\"CH(m)\",\"coupling\":0,\"multiplicity\":\"m\",\"shift\":7.25}],\"name\":\"toluene\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":7,\"multiplicity\":\"t\",\"shift\":1.03},{\"proton\":\"CH2\",\"coupling\":7,\"multiplicity\":\"q\",\"shift\":2.53}],\"name\":\"triethylamine\"}],\"solvent\":\"CDCl3\"},{\"impurities\":[{\"shifts\":[{\"proton\":\"X\",\"coupling\":0,\"multiplicity\":\"\",\"shift\":2.05}],\"name\":\"solvent_residual_peak\"},{\"shifts\":[{\"proton\":\"H2O\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":2.84}],\"name\":\"H2O\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":1.96}],\"name\":\"acetic_acid\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":2.09}],\"name\":\"acetone\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":2.05}],\"name\":\"acetonitrile\"},{\"shifts\":[{\"proton\":\"CH\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":7.36}],\"name\":\"benzene\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":1.18}],\"name\":\"tert-butyl_alcohol\"},{\"shifts\":[{\"proton\":\"CCH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":1.13},{\"proton\":\"OCH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":3.13}],\"name\":\"tert-butyl_methyl_ether\"},{\"shifts\":[{\"proton\":\"ArH\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":6.96},{\"proton\":\"ArCH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":2.22},{\"proton\":\"ArC(CH3)3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":1.41}],\"name\":\"BHTb\"},{\"shifts\":[{\"proton\":\"CH\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":8.02}],\"name\":\"chloroform\"},{\"shifts\":[{\"proton\":\"CH2\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":1.43}],\"name\":\"cyclohexane\"},{\"shifts\":[{\"proton\":\"CH2\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":3.87}],\"name\":\"1,2-dichloroethane\"},{\"shifts\":[{\"proton\":\"CH2\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":5.63}],\"name\":\"dichloromethane\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":7,\"multiplicity\":\"t\",\"shift\":1.11},{\"proton\":\"CH2\",\"coupling\":7,\"multiplicity\":\"q\",\"shift\":3.41}],\"name\":\"diethyl_ether\"},{\"shifts\":[{\"proton\":\"CH2\",\"coupling\":0,\"multiplicity\":\"m\",\"shift\":3.56},{\"proton\":\"CH2\",\"coupling\":0,\"multiplicity\":\"m\",\"shift\":3.47},{\"proton\":\"OCH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":3.28}],\"name\":\"diglyme\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":3.28},{\"proton\":\"CH2\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":3.46}],\"name\":\"1,2-dimethoxyethane\"},{\"shifts\":[{\"proton\":\"CH3CO\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":1.97},{\"proton\":\"NCH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":3},{\"proton\":\"NCH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":2.83}],\"name\":\"dimethylacetamide\"},{\"shifts\":[{\"proton\":\"CH\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":7.96},{\"proton\":\"CH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":2.94},{\"proton\":\"CH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":2.78}],\"name\":\"dimethylformamide\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":2.52}],\"name\":\"dimethyl_sulfoxide\"},{\"shifts\":[{\"proton\":\"CH2\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":3.59}],\"name\":\"dioxane\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":7,\"multiplicity\":\"t\",\"shift\":1.12},{\"proton\":\"CH2\",\"coupling\":7,\"multiplicity\":\"q\",\"shift\":3.57},{\"proton\":\"OH\",\"coupling\":5,\"multiplicity\":\"s,t\",\"shift\":3.39}],\"name\":\"ethanol\"},{\"shifts\":[{\"proton\":\"CH3CO\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":1.97},{\"proton\":\"CH2CH3\",\"coupling\":7,\"multiplicity\":\"q\",\"shift\":4.05},{\"proton\":\"CH2CH3\",\"coupling\":7,\"multiplicity\":\"t\",\"shift\":1.2}],\"name\":\"ethyl_acetate\"},{\"shifts\":[{\"proton\":\"CH3CO\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":2.07},{\"proton\":\"CH2CH3\",\"coupling\":7,\"multiplicity\":\"q\",\"shift\":2.45},{\"proton\":\"CH2CH3\",\"coupling\":7,\"multiplicity\":\"t\",\"shift\":0.96}],\"name\":\"ethyl_methyl_ketone\"},{\"shifts\":[{\"proton\":\"CH\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":3.28}],\"name\":\"ethylene_glycol\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":0,\"multiplicity\":\"m\",\"shift\":0.87},{\"proton\":\"CH2\",\"coupling\":0,\"multiplicity\":\"br_s\",\"shift\":1.29}],\"name\":\"grease^f\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":0,\"multiplicity\":\"t\",\"shift\":0.88},{\"proton\":\"CH2\",\"coupling\":0,\"multiplicity\":\"m\",\"shift\":1.28}],\"name\":\"n-hexane\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":9.5,\"multiplicity\":\"d\",\"shift\":2.59}],\"name\":\"HMPAg\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":3.31},{\"proton\":\"OH\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":3.12}],\"name\":\"methanol\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":4.43}],\"name\":\"nitromethane\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":7,\"multiplicity\":\"t\",\"shift\":0.88},{\"proton\":\"CH2\",\"coupling\":0,\"multiplicity\":\"m\",\"shift\":1.27}],\"name\":\"n-pentane\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":6,\"multiplicity\":\"d\",\"shift\":1.1},{\"proton\":\"CH\",\"coupling\":6,\"multiplicity\":\"sep\",\"shift\":3.9}],\"name\":\"2-propanol\"},{\"shifts\":[{\"proton\":\"CH(2)\",\"coupling\":0,\"multiplicity\":\"m\",\"shift\":8.58},{\"proton\":\"CH(3)\",\"coupling\":0,\"multiplicity\":\"m\",\"shift\":7.35},{\"proton\":\"CH(4)\",\"coupling\":0,\"multiplicity\":\"m\",\"shift\":7.76}],\"name\":\"pyridine\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":0.13}],\"name\":\"silicone_greasei\"},{\"shifts\":[{\"proton\":\"CH2\",\"coupling\":0,\"multiplicity\":\"m\",\"shift\":1.79},{\"proton\":\"CH2O\",\"coupling\":0,\"multiplicity\":\"m\",\"shift\":3.63}],\"name\":\"tetrahydrofuran\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":2.32},{\"proton\":\"CH(o/p)\",\"coupling\":0,\"multiplicity\":\"m\",\"shift\":7.5},{\"proton\":\"CH(m)\",\"coupling\":0,\"multiplicity\":\"m\",\"shift\":7.5}],\"name\":\"toluene\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":7,\"multiplicity\":\"t\",\"shift\":0.96},{\"proton\":\"CH2\",\"coupling\":7,\"multiplicity\":\"q\",\"shift\":2.45}],\"name\":\"triethylamine\"}],\"solvent\":\"(CD3)2CO\"},{\"impurities\":[{\"shifts\":[{\"proton\":\"X\",\"coupling\":0,\"multiplicity\":\"\",\"shift\":2.5}],\"name\":\"solvent_residual_peak\"},{\"shifts\":[{\"proton\":\"H2O\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":3.33}],\"name\":\"H2O\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":1.91}],\"name\":\"acetic_acid\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":2.09}],\"name\":\"acetone\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":2.07}],\"name\":\"acetonitrile\"},{\"shifts\":[{\"proton\":\"CH\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":7.37}],\"name\":\"benzene\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":1.11},{\"proton\":\"OHc\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":4.19}],\"name\":\"tert-butyl_alcohol\"},{\"shifts\":[{\"proton\":\"CCH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":1.11},{\"proton\":\"OCH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":3.08}],\"name\":\"tert-butyl_methyl_ether\"},{\"shifts\":[{\"proton\":\"ArH\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":6.87},{\"proton\":\"OHc\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":6.65},{\"proton\":\"ArCH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":2.18},{\"proton\":\"ArC(CH3)3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":1.36}],\"name\":\"BHTb\"},{\"shifts\":[{\"proton\":\"CH\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":8.32}],\"name\":\"chloroform\"},{\"shifts\":[{\"proton\":\"CH2\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":1.4}],\"name\":\"cyclohexane\"},{\"shifts\":[{\"proton\":\"CH2\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":3.9}],\"name\":\"1,2-dichloroethane\"},{\"shifts\":[{\"proton\":\"CH2\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":5.76}],\"name\":\"dichloromethane\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":7,\"multiplicity\":\"t\",\"shift\":1.09},{\"proton\":\"CH2\",\"coupling\":7,\"multiplicity\":\"q\",\"shift\":3.38}],\"name\":\"diethyl_ether\"},{\"shifts\":[{\"proton\":\"CH2\",\"coupling\":0,\"multiplicity\":\"m\",\"shift\":3.51},{\"proton\":\"CH2\",\"coupling\":0,\"multiplicity\":\"m\",\"shift\":3.38},{\"proton\":\"OCH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":3.24}],\"name\":\"diglyme\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":3.24},{\"proton\":\"CH2\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":3.43}],\"name\":\"1,2-dimethoxyethane\"},{\"shifts\":[{\"proton\":\"CH3CO\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":1.96},{\"proton\":\"NCH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":2.94},{\"proton\":\"NCH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":2.78}],\"name\":\"dimethylacetamide\"},{\"shifts\":[{\"proton\":\"CH\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":7.95},{\"proton\":\"CH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":2.89},{\"proton\":\"CH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":2.73}],\"name\":\"dimethylformamide\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":2.54}],\"name\":\"dimethyl_sulfoxide\"},{\"shifts\":[{\"proton\":\"CH2\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":3.57}],\"name\":\"dioxane\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":7,\"multiplicity\":\"t\",\"shift\":1.06},{\"proton\":\"CH2\",\"coupling\":7,\"multiplicity\":\"q\",\"shift\":3.44},{\"proton\":\"OH\",\"coupling\":5,\"multiplicity\":\"s,t\",\"shift\":4.63}],\"name\":\"ethanol\"},{\"shifts\":[{\"proton\":\"CH3CO\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":1.99},{\"proton\":\"CH2CH3\",\"coupling\":7,\"multiplicity\":\"q\",\"shift\":4.03},{\"proton\":\"CH2CH3\",\"coupling\":7,\"multiplicity\":\"t\",\"shift\":1.17}],\"name\":\"ethyl_acetate\"},{\"shifts\":[{\"proton\":\"CH3CO\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":2.07},{\"proton\":\"CH2CH3\",\"coupling\":7,\"multiplicity\":\"q\",\"shift\":2.43},{\"proton\":\"CH2CH3\",\"coupling\":7,\"multiplicity\":\"t\",\"shift\":0.91}],\"name\":\"ethyl_methyl_ketone\"},{\"shifts\":[{\"proton\":\"CH\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":3.34}],\"name\":\"ethylene_glycol\"},{\"shifts\":[],\"name\":\"grease^f\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":0,\"multiplicity\":\"t\",\"shift\":0.86},{\"proton\":\"CH2\",\"coupling\":0,\"multiplicity\":\"m\",\"shift\":1.25}],\"name\":\"n-hexane\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":9.5,\"multiplicity\":\"d\",\"shift\":2.53}],\"name\":\"HMPAg\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":3.16},{\"proton\":\"OH\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":4.01}],\"name\":\"methanol\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":4.42}],\"name\":\"nitromethane\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":7,\"multiplicity\":\"t\",\"shift\":0.88},{\"proton\":\"CH2\",\"coupling\":0,\"multiplicity\":\"m\",\"shift\":1.27}],\"name\":\"n-pentane\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":6,\"multiplicity\":\"d\",\"shift\":1.04},{\"proton\":\"CH\",\"coupling\":6,\"multiplicity\":\"sep\",\"shift\":3.78}],\"name\":\"2-propanol\"},{\"shifts\":[{\"proton\":\"CH(2)\",\"coupling\":0,\"multiplicity\":\"m\",\"shift\":8.58},{\"proton\":\"CH(3)\",\"coupling\":0,\"multiplicity\":\"m\",\"shift\":7.39},{\"proton\":\"CH(4)\",\"coupling\":0,\"multiplicity\":\"m\",\"shift\":7.79}],\"name\":\"pyridine\"},{\"shifts\":[],\"name\":\"silicone_greasei\"},{\"shifts\":[{\"proton\":\"CH2\",\"coupling\":0,\"multiplicity\":\"m\",\"shift\":1.76},{\"proton\":\"CH2O\",\"coupling\":0,\"multiplicity\":\"m\",\"shift\":3.6}],\"name\":\"tetrahydrofuran\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":2.3},{\"proton\":\"CH(o/p)\",\"coupling\":0,\"multiplicity\":\"m\",\"shift\":7.18},{\"proton\":\"CH(m)\",\"coupling\":0,\"multiplicity\":\"m\",\"shift\":7.25}],\"name\":\"toluene\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":7,\"multiplicity\":\"t\",\"shift\":0.93},{\"proton\":\"CH2\",\"coupling\":7,\"multiplicity\":\"q\",\"shift\":2.43}],\"name\":\"triethylamine\"}],\"solvent\":\"(CD3)2SO/DMSO\"},{\"impurities\":[{\"shifts\":[{\"proton\":\"X\",\"coupling\":0,\"multiplicity\":\"\",\"shift\":7.16}],\"name\":\"solvent_residual_peak\"},{\"shifts\":[{\"proton\":\"H2O\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":0.4}],\"name\":\"H2O\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":1.55}],\"name\":\"acetic_acid\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":1.55}],\"name\":\"acetone\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":1.55}],\"name\":\"acetonitrile\"},{\"shifts\":[{\"proton\":\"CH\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":7.15}],\"name\":\"benzene\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":1.05},{\"proton\":\"OHc\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":1.55}],\"name\":\"tert-butyl_alcohol\"},{\"shifts\":[{\"proton\":\"CCH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":1.07},{\"proton\":\"OCH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":3.04}],\"name\":\"tert-butyl_methyl_ether\"},{\"shifts\":[{\"proton\":\"ArH\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":7.05},{\"proton\":\"OHc\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":4.79},{\"proton\":\"ArCH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":2.24},{\"proton\":\"ArC(CH3)3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":1.38}],\"name\":\"BHTb\"},{\"shifts\":[{\"proton\":\"CH\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":6.15}],\"name\":\"chloroform\"},{\"shifts\":[{\"proton\":\"CH2\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":1.4}],\"name\":\"cyclohexane\"},{\"shifts\":[{\"proton\":\"CH2\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":2.9}],\"name\":\"1,2-dichloroethane\"},{\"shifts\":[{\"proton\":\"CH2\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":4.27}],\"name\":\"dichloromethane\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":7,\"multiplicity\":\"t\",\"shift\":1.11},{\"proton\":\"CH2\",\"coupling\":7,\"multiplicity\":\"q\",\"shift\":3.26}],\"name\":\"diethyl_ether\"},{\"shifts\":[{\"proton\":\"CH2\",\"coupling\":0,\"multiplicity\":\"m\",\"shift\":3.46},{\"proton\":\"CH2\",\"coupling\":0,\"multiplicity\":\"m\",\"shift\":3.34},{\"proton\":\"OCH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":3.11}],\"name\":\"diglyme\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":3.12},{\"proton\":\"CH2\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":3.33}],\"name\":\"1,2-dimethoxyethane\"},{\"shifts\":[{\"proton\":\"CH3CO\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":1.6},{\"proton\":\"NCH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":2.57},{\"proton\":\"NCH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":2.05}],\"name\":\"dimethylacetamide\"},{\"shifts\":[{\"proton\":\"CH\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":7.63},{\"proton\":\"CH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":2.36},{\"proton\":\"CH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":1.86}],\"name\":\"dimethylformamide\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":1.68}],\"name\":\"dimethyl_sulfoxide\"},{\"shifts\":[{\"proton\":\"CH2\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":3.35}],\"name\":\"dioxane\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":7,\"multiplicity\":\"t\",\"shift\":0.96},{\"proton\":\"CH2\",\"coupling\":7,\"multiplicity\":\"q\",\"shift\":3.34}],\"name\":\"ethanol\"},{\"shifts\":[{\"proton\":\"CH3CO\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":1.65},{\"proton\":\"CH2CH3\",\"coupling\":7,\"multiplicity\":\"q\",\"shift\":3.89},{\"proton\":\"CH2CH3\",\"coupling\":7,\"multiplicity\":\"t\",\"shift\":0.92}],\"name\":\"ethyl_acetate\"},{\"shifts\":[{\"proton\":\"CH3CO\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":1.58},{\"proton\":\"CH2CH3\",\"coupling\":7,\"multiplicity\":\"q\",\"shift\":1.81},{\"proton\":\"CH2CH3\",\"coupling\":7,\"multiplicity\":\"t\",\"shift\":0.85}],\"name\":\"ethyl_methyl_ketone\"},{\"shifts\":[{\"proton\":\"CH\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":3.41}],\"name\":\"ethylene_glycol\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":0,\"multiplicity\":\"m\",\"shift\":0.92},{\"proton\":\"CH2\",\"coupling\":0,\"multiplicity\":\"br_s\",\"shift\":1.36}],\"name\":\"grease^f\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":0,\"multiplicity\":\"t\",\"shift\":0.89},{\"proton\":\"CH2\",\"coupling\":0,\"multiplicity\":\"m\",\"shift\":1.24}],\"name\":\"n-hexane\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":9.5,\"multiplicity\":\"d\",\"shift\":2.4}],\"name\":\"HMPAg\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":3.07}],\"name\":\"methanol\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":2.94}],\"name\":\"nitromethane\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":7,\"multiplicity\":\"t\",\"shift\":0.86},{\"proton\":\"CH2\",\"coupling\":0,\"multiplicity\":\"m\",\"shift\":1.23}],\"name\":\"n-pentane\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":6,\"multiplicity\":\"d\",\"shift\":0.95},{\"proton\":\"CH\",\"coupling\":6,\"multiplicity\":\"sep\",\"shift\":3.67}],\"name\":\"2-propanol\"},{\"shifts\":[{\"proton\":\"CH(2)\",\"coupling\":0,\"multiplicity\":\"m\",\"shift\":8.53},{\"proton\":\"CH(3)\",\"coupling\":0,\"multiplicity\":\"m\",\"shift\":6.66},{\"proton\":\"CH(4)\",\"coupling\":0,\"multiplicity\":\"m\",\"shift\":6.98}],\"name\":\"pyridine\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":0.29}],\"name\":\"silicone_greasei\"},{\"shifts\":[{\"proton\":\"CH2\",\"coupling\":0,\"multiplicity\":\"m\",\"shift\":1.4},{\"proton\":\"CH2O\",\"coupling\":0,\"multiplicity\":\"m\",\"shift\":3.57}],\"name\":\"tetrahydrofuran\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":2.11},{\"proton\":\"CH(o/p)\",\"coupling\":0,\"multiplicity\":\"m\",\"shift\":7.02},{\"proton\":\"CH(m)\",\"coupling\":0,\"multiplicity\":\"m\",\"shift\":7.13}],\"name\":\"toluene\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":7,\"multiplicity\":\"t\",\"shift\":0.96},{\"proton\":\"CH2\",\"coupling\":7,\"multiplicity\":\"q\",\"shift\":2.4}],\"name\":\"triethylamine\"}],\"solvent\":\"C6D6\"},{\"impurities\":[{\"shifts\":[{\"proton\":\"X\",\"coupling\":0,\"multiplicity\":\"\",\"shift\":1.94}],\"name\":\"solvent_residual_peak\"},{\"shifts\":[{\"proton\":\"H2O\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":2.13}],\"name\":\"H2O\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":1.96}],\"name\":\"acetic_acid\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":2.08}],\"name\":\"acetone\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":1.96}],\"name\":\"acetonitrile\"},{\"shifts\":[{\"proton\":\"CH\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":7.37}],\"name\":\"benzene\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":1.16},{\"proton\":\"OHc\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":2.18}],\"name\":\"tert-butyl_alcohol\"},{\"shifts\":[{\"proton\":\"CCH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":1.14},{\"proton\":\"OCH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":3.13}],\"name\":\"tert-butyl_methyl_ether\"},{\"shifts\":[{\"proton\":\"ArH\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":6.97},{\"proton\":\"OHc\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":5.2},{\"proton\":\"ArCH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":2.22},{\"proton\":\"ArC(CH3)3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":1.39}],\"name\":\"BHTb\"},{\"shifts\":[{\"proton\":\"CH\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":7.58}],\"name\":\"chloroform\"},{\"shifts\":[{\"proton\":\"CH2\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":1.44}],\"name\":\"cyclohexane\"},{\"shifts\":[{\"proton\":\"CH2\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":3.81}],\"name\":\"1,2-dichloroethane\"},{\"shifts\":[{\"proton\":\"CH2\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":5.44}],\"name\":\"dichloromethane\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":7,\"multiplicity\":\"t\",\"shift\":1.12},{\"proton\":\"CH2\",\"coupling\":7,\"multiplicity\":\"q\",\"shift\":3.42}],\"name\":\"diethyl_ether\"},{\"shifts\":[{\"proton\":\"CH2\",\"coupling\":0,\"multiplicity\":\"m\",\"shift\":3.53},{\"proton\":\"CH2\",\"coupling\":0,\"multiplicity\":\"m\",\"shift\":3.45},{\"proton\":\"OCH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":3.29}],\"name\":\"diglyme\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":3.28},{\"proton\":\"CH2\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":3.45}],\"name\":\"1,2-dimethoxyethane\"},{\"shifts\":[{\"proton\":\"CH3CO\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":1.97},{\"proton\":\"NCH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":2.96},{\"proton\":\"NCH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":2.83}],\"name\":\"dimethylacetamide\"},{\"shifts\":[{\"proton\":\"CH\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":7.92},{\"proton\":\"CH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":2.89},{\"proton\":\"CH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":2.77}],\"name\":\"dimethylformamide\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":2.5}],\"name\":\"dimethyl_sulfoxide\"},{\"shifts\":[{\"proton\":\"CH2\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":3.6}],\"name\":\"dioxane\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":7,\"multiplicity\":\"t\",\"shift\":1.12},{\"proton\":\"CH2\",\"coupling\":7,\"multiplicity\":\"q\",\"shift\":3.54},{\"proton\":\"OH\",\"coupling\":5,\"multiplicity\":\"s,t\",\"shift\":2.47}],\"name\":\"ethanol\"},{\"shifts\":[{\"proton\":\"CH3CO\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":1.97},{\"proton\":\"CH2CH3\",\"coupling\":7,\"multiplicity\":\"q\",\"shift\":4.06},{\"proton\":\"CH2CH3\",\"coupling\":7,\"multiplicity\":\"t\",\"shift\":1.2}],\"name\":\"ethyl_acetate\"},{\"shifts\":[{\"proton\":\"CH3CO\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":2.06},{\"proton\":\"CH2CH3\",\"coupling\":7,\"multiplicity\":\"q\",\"shift\":2.43},{\"proton\":\"CH2CH3\",\"coupling\":7,\"multiplicity\":\"t\",\"shift\":0.96}],\"name\":\"ethyl_methyl_ketone\"},{\"shifts\":[{\"proton\":\"CH\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":3.51}],\"name\":\"ethylene_glycol\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":0,\"multiplicity\":\"m\",\"shift\":0.86},{\"proton\":\"CH2\",\"coupling\":0,\"multiplicity\":\"br_s\",\"shift\":1.27}],\"name\":\"grease^f\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":0,\"multiplicity\":\"t\",\"shift\":0.89},{\"proton\":\"CH2\",\"coupling\":0,\"multiplicity\":\"m\",\"shift\":1.28}],\"name\":\"n-hexane\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":9.5,\"multiplicity\":\"d\",\"shift\":2.57}],\"name\":\"HMPAg\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":3.28},{\"proton\":\"OH\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":2.16}],\"name\":\"methanol\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":4.31}],\"name\":\"nitromethane\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":7,\"multiplicity\":\"t\",\"shift\":0.87},{\"proton\":\"CH2\",\"coupling\":0,\"multiplicity\":\"m\",\"shift\":1.29}],\"name\":\"n-pentane\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":6,\"multiplicity\":\"d\",\"shift\":1.09},{\"proton\":\"CH\",\"coupling\":6,\"multiplicity\":\"sep\",\"shift\":3.87}],\"name\":\"2-propanol\"},{\"shifts\":[{\"proton\":\"CH(2)\",\"coupling\":0,\"multiplicity\":\"m\",\"shift\":8.57},{\"proton\":\"CH(3)\",\"coupling\":0,\"multiplicity\":\"m\",\"shift\":7.33},{\"proton\":\"CH(4)\",\"coupling\":0,\"multiplicity\":\"m\",\"shift\":7.73}],\"name\":\"pyridine\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":0.08}],\"name\":\"silicone_greasei\"},{\"shifts\":[{\"proton\":\"CH2\",\"coupling\":0,\"multiplicity\":\"m\",\"shift\":1.8},{\"proton\":\"CH2O\",\"coupling\":0,\"multiplicity\":\"m\",\"shift\":3.64}],\"name\":\"tetrahydrofuran\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":2.33},{\"proton\":\"CH(o/p)\",\"coupling\":0,\"multiplicity\":\"m\",\"shift\":7.2},{\"proton\":\"CH(m)\",\"coupling\":0,\"multiplicity\":\"m\",\"shift\":7.2}],\"name\":\"toluene\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":7,\"multiplicity\":\"t\",\"shift\":0.96},{\"proton\":\"CH2\",\"coupling\":7,\"multiplicity\":\"q\",\"shift\":2.45}],\"name\":\"triethylamine\"}],\"solvent\":\"CD3CN\"},{\"impurities\":[{\"shifts\":[{\"proton\":\"X\",\"coupling\":0,\"multiplicity\":\"\",\"shift\":3.31}],\"name\":\"solvent_residual_peak\"},{\"shifts\":[{\"proton\":\"H2O\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":4.87}],\"name\":\"H2O\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":1.99}],\"name\":\"acetic_acid\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":2.15}],\"name\":\"acetone\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":2.03}],\"name\":\"acetonitrile\"},{\"shifts\":[{\"proton\":\"CH\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":7.33}],\"name\":\"benzene\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":1.4}],\"name\":\"tert-butyl_alcohol\"},{\"shifts\":[{\"proton\":\"CCH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":1.15},{\"proton\":\"OCH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":3.2}],\"name\":\"tert-butyl_methyl_ether\"},{\"shifts\":[{\"proton\":\"ArH\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":6.92},{\"proton\":\"ArCH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":2.21},{\"proton\":\"ArC(CH3)3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":1.4}],\"name\":\"BHTb\"},{\"shifts\":[{\"proton\":\"CH\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":7.9}],\"name\":\"chloroform\"},{\"shifts\":[{\"proton\":\"CH2\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":1.45}],\"name\":\"cyclohexane\"},{\"shifts\":[{\"proton\":\"CH2\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":3.78}],\"name\":\"1,2-dichloroethane\"},{\"shifts\":[{\"proton\":\"CH2\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":5.49}],\"name\":\"dichloromethane\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":7,\"multiplicity\":\"t\",\"shift\":1.18},{\"proton\":\"CH2\",\"coupling\":7,\"multiplicity\":\"q\",\"shift\":3.49}],\"name\":\"diethyl_ether\"},{\"shifts\":[{\"proton\":\"CH2\",\"coupling\":0,\"multiplicity\":\"m\",\"shift\":3.61},{\"proton\":\"CH2\",\"coupling\":0,\"multiplicity\":\"m\",\"shift\":3.58},{\"proton\":\"OCH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":3.35}],\"name\":\"diglyme\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":3.35},{\"proton\":\"CH2\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":3.52}],\"name\":\"1,2-dimethoxyethane\"},{\"shifts\":[{\"proton\":\"CH3CO\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":2.07},{\"proton\":\"NCH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":3.31},{\"proton\":\"NCH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":2.92}],\"name\":\"dimethylacetamide\"},{\"shifts\":[{\"proton\":\"CH\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":7.97},{\"proton\":\"CH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":2.99},{\"proton\":\"CH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":2.86}],\"name\":\"dimethylformamide\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":2.65}],\"name\":\"dimethyl_sulfoxide\"},{\"shifts\":[{\"proton\":\"CH2\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":3.66}],\"name\":\"dioxane\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":7,\"multiplicity\":\"t\",\"shift\":1.19},{\"proton\":\"CH2\",\"coupling\":7,\"multiplicity\":\"q\",\"shift\":3.6}],\"name\":\"ethanol\"},{\"shifts\":[{\"proton\":\"CH3CO\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":2.01},{\"proton\":\"CH2CH3\",\"coupling\":7,\"multiplicity\":\"q\",\"shift\":4.09},{\"proton\":\"CH2CH3\",\"coupling\":7,\"multiplicity\":\"t\",\"shift\":1.24}],\"name\":\"ethyl_acetate\"},{\"shifts\":[{\"proton\":\"CH3CO\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":2.12},{\"proton\":\"CH2CH3\",\"coupling\":7,\"multiplicity\":\"q\",\"shift\":2.5},{\"proton\":\"CH2CH3\",\"coupling\":7,\"multiplicity\":\"t\",\"shift\":1.01}],\"name\":\"ethyl_methyl_ketone\"},{\"shifts\":[{\"proton\":\"CH\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":3.59}],\"name\":\"ethylene_glycol\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":0,\"multiplicity\":\"m\",\"shift\":0.88},{\"proton\":\"CH2\",\"coupling\":0,\"multiplicity\":\"br_s\",\"shift\":1.29}],\"name\":\"grease^f\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":0,\"multiplicity\":\"t\",\"shift\":0.9},{\"proton\":\"CH2\",\"coupling\":0,\"multiplicity\":\"m\",\"shift\":1.29}],\"name\":\"n-hexane\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":9.5,\"multiplicity\":\"d\",\"shift\":2.64}],\"name\":\"HMPAg\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":3.34}],\"name\":\"methanol\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":4.34}],\"name\":\"nitromethane\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":7,\"multiplicity\":\"t\",\"shift\":0.89},{\"proton\":\"CH2\",\"coupling\":0,\"multiplicity\":\"m\",\"shift\":1.29}],\"name\":\"n-pentane\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":6,\"multiplicity\":\"d\",\"shift\":1.5},{\"proton\":\"CH\",\"coupling\":6,\"multiplicity\":\"sep\",\"shift\":3.92}],\"name\":\"2-propanol\"},{\"shifts\":[{\"proton\":\"CH(2)\",\"coupling\":0,\"multiplicity\":\"m\",\"shift\":8.53},{\"proton\":\"CH(3)\",\"coupling\":0,\"multiplicity\":\"m\",\"shift\":7.44},{\"proton\":\"CH(4)\",\"coupling\":0,\"multiplicity\":\"m\",\"shift\":7.85}],\"name\":\"pyridine\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":0.1}],\"name\":\"silicone_greasei\"},{\"shifts\":[{\"proton\":\"CH2\",\"coupling\":0,\"multiplicity\":\"m\",\"shift\":1.87},{\"proton\":\"CH2O\",\"coupling\":0,\"multiplicity\":\"m\",\"shift\":3.71}],\"name\":\"tetrahydrofuran\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":2.32},{\"proton\":\"CH(o/p)\",\"coupling\":0,\"multiplicity\":\"m\",\"shift\":7.16},{\"proton\":\"CH(m)\",\"coupling\":0,\"multiplicity\":\"m\",\"shift\":7.16}],\"name\":\"toluene\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":7,\"multiplicity\":\"t\",\"shift\":1.05},{\"proton\":\"CH2\",\"coupling\":7,\"multiplicity\":\"q\",\"shift\":2.58}],\"name\":\"triethylamine\"}],\"solvent\":\"CD3OD\"},{\"impurities\":[{\"shifts\":[{\"proton\":\"X\",\"coupling\":0,\"multiplicity\":\"\",\"shift\":4.79}],\"name\":\"solvent_residual_peak\"},{\"shifts\":[],\"name\":\"H2O\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":2.08}],\"name\":\"acetic_acid\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":2.22}],\"name\":\"acetone\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":2.06}],\"name\":\"acetonitrile\"},{\"shifts\":[],\"name\":\"benzene\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":1.24}],\"name\":\"tert-butyl_alcohol\"},{\"shifts\":[{\"proton\":\"CCH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":1.21},{\"proton\":\"OCH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":3.22}],\"name\":\"tert-butyl_methyl_ether\"},{\"shifts\":[],\"name\":\"BHTb\"},{\"shifts\":[],\"name\":\"chloroform\"},{\"shifts\":[],\"name\":\"cyclohexane\"},{\"shifts\":[],\"name\":\"1,2-dichloroethane\"},{\"shifts\":[],\"name\":\"dichloromethane\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":7,\"multiplicity\":\"t\",\"shift\":1.17},{\"proton\":\"CH2\",\"coupling\":7,\"multiplicity\":\"q\",\"shift\":3.56}],\"name\":\"diethyl_ether\"},{\"shifts\":[{\"proton\":\"CH2\",\"coupling\":0,\"multiplicity\":\"m\",\"shift\":3.67},{\"proton\":\"CH2\",\"coupling\":0,\"multiplicity\":\"m\",\"shift\":3.61},{\"proton\":\"OCH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":3.37}],\"name\":\"diglyme\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":3.37},{\"proton\":\"CH2\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":3.6}],\"name\":\"1,2-dimethoxyethane\"},{\"shifts\":[{\"proton\":\"CH3CO\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":2.08},{\"proton\":\"NCH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":3.06},{\"proton\":\"NCH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":2.9}],\"name\":\"dimethylacetamide\"},{\"shifts\":[{\"proton\":\"CH\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":7.92},{\"proton\":\"CH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":3.01},{\"proton\":\"CH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":2.85}],\"name\":\"dimethylformamide\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":2.71}],\"name\":\"dimethyl_sulfoxide\"},{\"shifts\":[{\"proton\":\"CH2\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":3.75}],\"name\":\"dioxane\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":7,\"multiplicity\":\"t\",\"shift\":1.17},{\"proton\":\"CH2\",\"coupling\":7,\"multiplicity\":\"q\",\"shift\":3.65}],\"name\":\"ethanol\"},{\"shifts\":[{\"proton\":\"CH3CO\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":2.07},{\"proton\":\"CH2CH3\",\"coupling\":7,\"multiplicity\":\"q\",\"shift\":4.14},{\"proton\":\"CH2CH3\",\"coupling\":7,\"multiplicity\":\"t\",\"shift\":1.24}],\"name\":\"ethyl_acetate\"},{\"shifts\":[{\"proton\":\"CH3CO\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":2.19},{\"proton\":\"CH2CH3\",\"coupling\":7,\"multiplicity\":\"q\",\"shift\":3.18},{\"proton\":\"CH2CH3\",\"coupling\":7,\"multiplicity\":\"t\",\"shift\":1.26}],\"name\":\"ethyl_methyl_ketone\"},{\"shifts\":[{\"proton\":\"CH\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":3.65}],\"name\":\"ethylene_glycol\"},{\"shifts\":[],\"name\":\"grease^f\"},{\"shifts\":[],\"name\":\"n-hexane\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":9.5,\"multiplicity\":\"d\",\"shift\":2.61}],\"name\":\"HMPAg\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":3.34}],\"name\":\"methanol\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":0,\"multiplicity\":\"s\",\"shift\":4.4}],\"name\":\"nitromethane\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":7,\"multiplicity\":\"t\",\"shift\":0.9}],\"name\":\"n-pentane\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":6,\"multiplicity\":\"d\",\"shift\":1.17},{\"proton\":\"CH\",\"coupling\":6,\"multiplicity\":\"sep\",\"shift\":4.02}],\"name\":\"2-propanol\"},{\"shifts\":[{\"proton\":\"CH(2)\",\"coupling\":0,\"multiplicity\":\"m\",\"shift\":8.52},{\"proton\":\"CH(3)\",\"coupling\":0,\"multiplicity\":\"m\",\"shift\":7.45},{\"proton\":\"CH(4)\",\"coupling\":0,\"multiplicity\":\"m\",\"shift\":7.87}],\"name\":\"pyridine\"},{\"shifts\":[],\"name\":\"silicone_greasei\"},{\"shifts\":[{\"proton\":\"CH2\",\"coupling\":0,\"multiplicity\":\"m\",\"shift\":1.88},{\"proton\":\"CH2O\",\"coupling\":0,\"multiplicity\":\"m\",\"shift\":3.74}],\"name\":\"tetrahydrofuran\"},{\"shifts\":[],\"name\":\"toluene\"},{\"shifts\":[{\"proton\":\"CH3\",\"coupling\":7,\"multiplicity\":\"t\",\"shift\":0.99},{\"proton\":\"CH2\",\"coupling\":7,\"multiplicity\":\"q\",\"shift\":2.57}],\"name\":\"triethylamine\"}],\"solvent\":\"D2O\"}];\n        //this.impurities = API.getVar(\"impurities\").getValue();\n        //File.parse(\"solvent1H.txt\", {header:false});\n        //console.log(this.impurities[0]);\n    },\n\n    /**\n     This function tries to determine which peaks belongs to common laboratory solvents\n     as trace impurities from DOI:10.1021/jo971176v. The only parameter of the table is\n     the solvent name.\n     */\n    labelPeaks:function(peakList, solvent, frequency){\n        var column = 0;\n        //console.log(this.impurities[0]);\n        for(column=4;column<this.impurities.length;column++){\n            //console.log(\"sss\".contains);\n            if(this.impurities[0][column].indexOf(solvent)>=0){\n                break;\n            }\n        }\n        //console.log(\"labelPeaks \"+column);\n        var nImpurities = this.impurities.length-1;\n        var nPeaks = peakList.length;\n        //Scores matrix\n        console.log(nImpurities);\n        var scores = new Array(nImpurities);\n        var max = 0, diff=0, score=0;\n        var gamma = 0.2;//ppm\n        var impurityID=-1;\n        var prevImp = \"\";\n        var maxIntensity = 0,i;\n        for(var j=nPeaks-1;j>=0;j--){\n            if(peakList[j][1]>maxIntensity)\n                maxIntensity = peakList[j][1];\n        }\n\n        for(i=nImpurities-1;i>=0;i--){\n            if(this.impurities[i+1][0]!=prevImp){\n                impurityID++;\n                prevImp=this.impurities[i+1][0];\n            }\n\n            //impID, max, maxIndex, average\n            scores[i]=[impurityID,this.impurities[i+1][2],\n                this.impurities[i+1][3],0,[],0];\n            max = 0;\n            for(var j=nPeaks-1;j>=0;j--){\n                diff = 10000;//Big numnber\n                if(this.impurities[i+1][column]>0)\n                    diff = Math.abs(peakList[j][0]-this.impurities[i+1][column]);\n                if(diff<gamma*3){\n                    score=this.score(diff,gamma);\n                    if(score>max){\n                        max=score;\n                        scores[i][3]=max;\n                        scores[i][4]=[j];\n                    }\n                }\n            }\n        }\n        //Calculate the average score for each impurity set of signals\n        var prevIndex = -1, sum=0, count = 0;\n        var candidates=[];\n        var impuritiesPeaks = [];\n        var i=nImpurities-1;\n        while(i>=-1){\n            if(i==-1||scores[i][0]!=prevIndex&&prevIndex!=-1){\n                if(prevIndex!=-1){\n                    scores[i+1][5]=sum/count;\n                    //Now, lets chech the multiplicities\n                    if(scores[i+1][5]>0.9){\n                        //console.log(scores[i+1][0]+\" SS \");\n                        score=this.updateScore(candidates, peakList, maxIntensity, frequency);\n                        if(score>0.9){\n                            //console.log(candidates);\n                            //TODO: Remove peaks and add it do impuritiesPeaks\n                            for(var j=0;j<candidates.length;j++){\n                                for(var k=candidates[j][4].length-1;k>=0;k--){\n                                    impuritiesPeaks.push(peakList[candidates[j][4][k]]);\n                                }\n                            }\n                        }\n                    }\n                }\n                if(i>=0){\n                    prevIndex=scores[i][0];\n                    sum=scores[i][3];\n                    count=1;\n                    candidates=[scores[i]];\n                }\n\n            }else{\n                prevIndex=scores[i][0];\n                candidates.push(scores[i]);\n                sum+=scores[i][3];\n                count++;\n            }\n            i--;\n        }\n        //console.log(impuritiesPeaks.length);\n\n        return impuritiesPeaks;\n    },\n    /**\n     Updates the score that a given impurity is present in the current spectrum. In this part I would expect\n     to have into account the multiplicity of the signal. Also the relative intensity of the signals.\n     THIS IS the KEY part of the algorithm!!!!!!!!!\n     */\n    updateScore:function(candidates, peakList, maxIntensity, frequency){\n        //You may do it to avoid this part.\n        //return 1;\n\n        //Check the multiplicity\n        var mul = \"\";\n        var j = 0,index, k, maxJppm=this.maxJ/frequency;\n        var min=0, indexMin=0, score=0;\n        for(var i=candidates.length-1;i>=0;i--){\n            mul = candidates[i][1];\n            j = candidates[i][2];\n            //console.log(candidates[i][4]);\n            index = candidates[i][4][0];\n            //console.log(peakList[index][0]+\" \"+mul+\" \"+j+\" \"+index);\n            //I guess we should try to identify the pattern in the nearby.\n            if(mul.indexOf(\"sep\")>=0){\n                if(peakList[index][1]>maxIntensity*0.33){\n                    candidates.splice(i,1);//Not a candidate anymore.\n                }\n            }else{\n                if(mul.indexOf(\"s\")>=0||mul.indexOf(\"X\")>=0){\n                    k=index-1;\n                    min=peakList[index][1];\n                    indexMin=index;\n                    while(k>=0&&Math.abs(peakList[index][0]-peakList[k][0])<0.025){\n                        if(peakList[k][1]<min){\n                            min=peakList[k][1];\n                            indexMin=k;\n                        }\n                        k--;\n                    }\n                    k=index+1;\n                    while(k<peakList.length&&Math.abs(peakList[index][0]-peakList[k][0])<0.025){\n                        if(peakList[k][1]<min){\n                            min=peakList[k][1];\n                            indexMin=k;\n                        }\n                        k++;\n                    }\n                    candidates[i][4][0]=indexMin;\n                    score+=1;\n                }\n            }\n            if(mul.indexOf(\"d\")>=0){\n                if(index>0&&index<peakList.length-1){\n                    var thisJ1 = Math.abs(Math.abs(peakList[index-1][0]-peakList[index][0])*frequency-j);\n                    var thisJ2 = Math.abs(Math.abs(peakList[index+1][0]-peakList[index][0])*frequency-j);\n                    var thisJ3 = Math.abs(Math.abs(peakList[index+1][0]-peakList[index-1][0])*frequency-j);\n                    if(thisJ1<2||thisJ2<2||thisJ3<2){\n                        if(thisJ1<thisJ2){\n                            if(thisJ1<thisJ3){\n                                candidates[i][4]=[index-1,index];\n                                score+=1;\n                            }\n                            else{\n                                candidates[i][4]=[index-1,index+1];\n                                score+=1;\n                            }\n                        }\n                        else{\n                            if(thisJ2<thisJ3){\n                                candidates[i][4]=[index,index+1];\n                                score+=1;\n                            }\n                            else{\n                                candidates[i][4]=[index-1,index+1];\n                                score+=1;\n                            }\n                        }\n                    }\n                }\n            }\n            if(mul.indexOf(\"t\")>=0){\n                //console.log(\"here\");\n                if(index>0&&index<peakList.length-1){\n                    var thisJ1 = Math.abs(Math.abs(peakList[index-1][0]-peakList[index][0])*frequency-j);\n                    var thisJ2 = Math.abs(Math.abs(peakList[index+1][0]-peakList[index][0])*frequency-j);\n                    var thisJ4 = Math.abs(Math.abs(peakList[index+1][0]-peakList[index+2][0])*frequency-j);\n                    //console.log(\"XX \"+thisJ1+\" \"+thisJ2);\n                    if(thisJ1<2){\n                        candidates[i][4]=[index-1, index];\n                        score+=0.5;\n                    }\n                    if(thisJ2<2){\n                        candidates[i][4].push(index+1);\n                        score+=0.5;\n                    }\n                    if(thisJ3<2){\n                        candidates[i][4].push(index+2);\n                        score+=0.5;\n                    }\n\n                }\n            }\n            if(mul.indexOf(\"q\")>=0){\n                if(index>1&&index<peakList.length-2){\n                    var thisJ1 = Math.abs(Math.abs(peakList[index-2][0]-peakList[index-1][0])*frequency-j);\n                    var thisJ2 = Math.abs(Math.abs(peakList[index-1][0]-peakList[index][0])*frequency-j);\n                    var thisJ3 = Math.abs(Math.abs(peakList[index+1][0]-peakList[index][0])*frequency-j);\n                    var thisJ4= Math.abs(Math.abs(peakList[index+2][0]-peakList[index+1][0])*frequency-j);\n                    if(thisJ1<2){\n                        candidates[i][4].push(index-2);\n                        score+=0.25;\n                    }\n                    if(thisJ2<2){\n                        candidates[i][4].push(index-1);\n                        score+=0.25;\n                    }\n                    if(thisJ3<2){\n                        candidates[i][4].push(index+1);\n                        score+=0.25;\n                    }\n                    if(thisJ4<2){\n                        candidates[i][4].push(index+2);\n                        score+=0.25;\n                    }\n                }\n            }\n\n\n        }\n\n        //console.log(score/candidates.length+ \" -> \"+candidates);\n        //Lets remove the candidates to be impurities.\n        //It would be equivalent to mark the peaks as valid again\n        if(score/candidates.length < 0.5){\n            for(var i=candidates.length-1;i>=0;i--){\n                candidates.splice(i,1);\n            }\n            return 0;\n        }\n        //Check the relative intensity\n        return 1;\n    },\n\n    score:function(value, gamma){\n        return Math.exp(-Math.pow(value/gamma,2)/2.0);\n    },\n    /**\n     This function joint all the nearby peaks into single signals. We may try to\n     determine the J-couplings and the multiplicity here.\n     */\n    createSignals:function(){\n\n    },\n    /**\n     Determine the peaks of the spectrum by applying a global spectrum deconvolution.\n     */\n    GSD:function(spectrum){\n        var data= spectrum.getXYData();\n        var y = data[1];\n        var x = data[0];\n\n        //Lets remove the noise for better performance\n        var noiseLevel = Math.abs(spectrum.getNoiseLevel());\n\n        //console.log(\"noise level \"+noiseLevel);\n        for(var i=y.length-1;i>=0;i--)\n            if(Math.abs(y[i])<noiseLevel)\n                y[i]=0;\n\n        var dx = x[1]-x[0];\n        // fill convolution frecuency axis\n        var X = [];//x[2:(x.length-2)];\n\n        // fill Savitzky-Golay polynomes\n        var Y = new Array();\n        var dY = new Array();\n        var ddY = new Array();\n        for (var j = 2; j < x.length -2; j++){\n            Y.push((1/35.0)*(-3*y[j-2] + 12*y[j-1] + 17*y[j] + 12*y[j+1] - 3*y[j+2]));\n            X.push(x[j]);\n            dY.push((1/(12*dx))*(y[j-2] - 8*y[j-1] + 8*y[j+1] - y[j+2]));\n            ddY.push((1/(7*dx*dx))*(2*y[j-2] - y[j-1] - 2*y[j] - y[j+1] + 2*y[j+2]));\n        }\n        // pushs max and min points in convolution functions\n        var maxY = new Array();\n        var stackInt = new Array();\n        var intervals = new Array();\n        var minddY = new Array();\n        //console.log(Y.length);\n        for (var i = 1; i < Y.length -1 ; i++)\n        {\n            if ((Y[i] > Y[i-1]) && (Y[i] > Y[i+1]))\n            {\n                maxY.push(X[i]);\n            }\n            if ((dY[i] < dY[i-1]) && (dY[i] < dY[i+1]))\n            {\n                stackInt.push(X[i]);\n            }\n            if ((dY[i] > dY[i-1]) && (dY[i] > dY[i+1]))\n            {\n                try{\n                    intervals.push( [X[i] , stackInt.pop()] );\n                }\n                catch(e){\n                    console.log(\"Error I don't know why\");\n                }\n            }\n            if ((ddY[i] < ddY[i-1]) && (ddY[i] < ddY[i+1]))\n            {\n                minddY.push( [X[i], Y[i]] );\n            }\n        }\n        // creates a list with (frecuency, linewith, height)\n        var signalsS = new Array();\n        var signals = new Array();\n        for (var j = 0; j < minddY.length; j++)\n        {\n            var f = minddY[j];\n            var frecuency = f[0];\n            var possible = new Array();\n            for (var k=0;k<intervals.length;k++){\n                var i = intervals[k];\n                if (frecuency > i[0] && frecuency < i[1])\n                    possible.push(i);\n            }\n            //console.log(\"possible \"+possible.length);\n            if (possible.length > 0)\n                if (possible.length == 1)\n                {\n                    var inter = possible[0];\n                    var linewith = inter[1] - inter[0];\n                    var height = f[1];\n                    var points = Y;\n                    //console.log(frecuency);\n                    points.sort(function(a, b){return a-b});\n                    if ((linewith > 2*dx) && (height > 0.0001*points[0])){\n                        signals.push( [frecuency, linewith, height] );\n                        signalsS.push([frecuency,height]);\n\n                    }\n                }\n                else\n                {\n                    //TODO: nested peaks\n                    console.log(\"Nested \"+possible);\n                }\n        }\n        return signalsS;\n        //jexport(\"peakPicking\",signalsS);\n    }\n}\n\nmodule.exports = PeakPicking;\n},{}],9:[function(require,module,exports){\nvar FFTUtils = require(\"./FFTUtils\");\nvar PeakOptimizer = require(\"./PeakOptimizer\");\nvar SimpleClustering =  require(\"./SimpleClustering\");\nvar StatArray = require('ml-stat/array');\n\nvar PeakPicking2D= {\n    DEBUG : false,\n    smallFilter : [\n        [0, 0, 1, 2, 2, 2, 1, 0, 0],\n        [0, 1, 4, 7, 7, 7, 4, 1, 0],\n        [1, 4, 5, 3, 0, 3, 5, 4, 1],\n        [2, 7, 3, -12, -23, -12, 3, 7, 2],\n        [2, 7, 0, -23, -40, -23, 0, 7, 2],\n        [2, 7, 3, -12, -23, -12, 3, 7, 2],\n        [1, 4, 5, 3, 0, 3, 5, 4, 1],\n        [0, 1, 3, 7, 7, 7, 3, 1, 0],\n        [0, 0, 1, 2, 2, 2, 1, 0, 0]],\n\n\n    //How noisy is the spectrum depending on the kind of experiment.\n    getLoGnStdDevNMR : function(spectraData) {\n    if (spectraData.isHomoNuclear())\n        return 1.5\n    else\n        return 3;\n    },\n\n    findPeaks2D : function(spectraData, thresholdFactor){\n        if(thresholdFactor==0)\n            thresholdFactor=1;\n        if(thresholdFactor<0)\n            thresholdFactor=-thresholdFactor;\n        var nbPoints = spectraData.getNbPoints();\n        var nbSubSpectra = spectraData.getNbSubSpectra();\n\n        var data = new Array(nbPoints * nbSubSpectra);\n        //var data = new Array(nbPoints * nbSubSpectra/2);\n\n        var isHomonuclear = spectraData.isHomoNuclear();\n\n        //var sum = new Array(nbPoints);\n\n        for (var iSubSpectra = 0; iSubSpectra < nbSubSpectra; iSubSpectra++) {\n            var spectrum = spectraData.getYData(iSubSpectra);\n            for (var iCol = 0; iCol < nbPoints; iCol++) {\n                if(isHomonuclear){\n                    data[iSubSpectra * nbPoints + iCol] =(spectrum[iCol]>0?spectrum[iCol]:0);\n                }\n                else{\n                    data[iSubSpectra * nbPoints + iCol] =Math.abs(spectrum[iCol]);\n                }\n            }\n        }\n\n        var nStdDev = this.getLoGnStdDevNMR(spectraData);\n        if(isHomonuclear){\n            var convolutedSpectrum = this.convoluteWithLoG(data, nbSubSpectra, nbPoints);\n            var peaksMC1 = this.findPeaks2DLoG(data, convolutedSpectrum, nbSubSpectra, nbPoints, nStdDev*thresholdFactor);//)1.5);\n            var peaksMax1 = this.findPeaks2DMax(data, convolutedSpectrum, nbSubSpectra, nbPoints, (nStdDev+0.5)*thresholdFactor);//2.0);\n            for(var i=0;i<peaksMC1.length;i++)\n                peaksMax1.push(peaksMC1[i]);\n            //console.log(peaksMax1);\n            return PeakOptimizer.enhanceSymmetry(this.createSignals2D(peaksMax1,spectraData,24));\n\n        }\n        else{\n            var convolutedSpectrum = this.convoluteWithLoG(data, nbSubSpectra, nbPoints);\n            var peaksMC1 = this.findPeaks2DLoG(data, convolutedSpectrum, nbSubSpectra, nbPoints, nStdDev*thresholdFactor);\n            //Peak2D[] peaksMC1 = PeakPicking2D.findPeaks2DMax(data, nbSubSpectra, nbPoints, (nStdDev+0.5)*thresholdFactor);\n            //Remove peaks with less than 3% of the intensity of the highest peak\n            return this.createSignals2D(PeakOptimizer.clean(peaksMC1, 0.05), spectraData,24);\n        }\n\n    },\n    /**\n     Calculates the 1st derivative of the 2D matrix, using the LoG kernel approximation\n     */\n    convoluteWithLoG : function(inputSpectrum, nRows, nCols){\n        var ftSpectrum = new Array(nCols * nRows);\n        for (var i = nRows * nCols-1; i >=0; i--){\n            ftSpectrum[i] = inputSpectrum[i];\n        }\n\n        ftSpectrum = FFTUtils.fft2DArray(ftSpectrum, nRows, nCols);\n\n        var dim = this.smallFilter.length;\n        var ftFilterData = new Array(nCols * nRows);\n        for(var i=nCols * nRows-1;i>=0;i--){\n            ftFilterData[i]=0;\n        }\n\n        var iRow, iCol;\n        var shift = (dim - 1) / 2;\n        //console.log(dim);\n        for (var ir = 0; ir < dim; ir++) {\n            iRow = (ir - shift + nRows) % nRows;\n            for (var ic = 0; ic < dim; ic++) {\n                iCol = (ic - shift + nCols) % nCols;\n                ftFilterData[iRow * nCols + iCol] = this.smallFilter[ir][ic];\n            }\n        }\n\n        ftFilterData = FFTUtils.fft2DArray(ftFilterData, nRows, nCols);\n\n        var ftRows = nRows * 2;\n        var ftCols = nCols / 2 + 1;\n        FFTUtils.convolute2DI(ftSpectrum, ftFilterData, ftRows, ftCols);\n\n        return  FFTUtils.ifft2DArray(ftSpectrum, ftRows, ftCols);\n    },\n    /**\n     Detects all the 2D-peaks in the given spectrum based on center of mass logic.\n     */\n    findPeaks2DLoG : function(inputSpectrum, convolutedSpectrum, nRows, nCols, nStdDev) {\n        var threshold = 0;\n        for(var i=nCols*nRows-2;i>=0;i--)\n            threshold+=Math.pow(convolutedSpectrum[i]-convolutedSpectrum[i+1],2);\n        threshold=-Math.sqrt(threshold);\n        threshold*=nStdDev/nRows;\n\n        var bitmask = new Array(nCols * nRows);\n        for(var i=nCols * nRows-1;i>=0;i--){\n            bitmask[i]=0;\n        }\n        var nbDetectedPoints = 0;\n        var lasti=-1;\n        for (var i = convolutedSpectrum.length-1; i >=0 ; i--) {\n            if (convolutedSpectrum[i] < threshold) {\n                bitmask[i] = 1;\n                nbDetectedPoints++;\n            }\n        }\n        var iStart = 0;\n        //int ranges = 0;\n        var peakList = [];\n\n        while (nbDetectedPoints != 0) {\n            for (iStart; iStart < bitmask.length && bitmask[iStart]==0; iStart++){};\n            //\n            if (iStart == bitmask.length)\n                break;\n\n            nbDetectedPoints -= this.extractArea(inputSpectrum, convolutedSpectrum,\n                bitmask, iStart, nRows, nCols, peakList, threshold);\n        }\n\n        if (peakList.length > 0&&this.DEBUG) {\n            console.log(\"No peak found\");\n        }\n        return peakList;\n    },\n    /**\n     Detects all the 2D-peaks in the given spectrum based on the Max logic.\n     */\n    findPeaks2DMax : function(inputSpectrum, cs, nRows, nCols, nStdDev) {\n        var threshold = 0;\n        for(var i=nCols*nRows-2;i>=0;i--)\n            threshold+=Math.pow(cs[i]-cs[i+1],2);\n        threshold=-Math.sqrt(threshold);\n        threshold*=nStdDev/nRows;\n\n        var rowI,colI;\n        var peakListMax = [];\n        var tmpIndex = 0;\n        for (var i = 0; i < cs.length; i++) {\n            if (cs[i] < threshold) {\n                //It is a peak?\n                rowI=Math.floor(i/nCols);\n                colI=i%nCols;\n                //Verifies if this point is a peak;\n                if(rowI>0&&rowI+1<nRows&&colI+1<nCols&&colI>0){\n                    //It is the minimum in the same row\n                    if(cs[i]<cs[i+1]&&cs[i]<cs[i-1]){\n                        //It is the minimum in the previous row\n                        tmpIndex=(rowI-1)*nCols+colI;\n                        if(cs[i]<cs[tmpIndex-1]&&cs[i]<cs[tmpIndex]&&cs[i]<cs[tmpIndex+1]){\n                            //It is the minimum in the next row\n                            tmpIndex=(rowI+1)*nCols+colI;\n                            if(cs[i]<cs[tmpIndex-1]&&cs[i]<cs[tmpIndex]&&cs[i]<cs[tmpIndex+1]){\n                                peakListMax.push({x:colI,y:rowI,z:inputSpectrum[i]});\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return peakListMax;\n    },\n    /*\n     This function detects the peaks\n     */\n    extractArea : function(spectrum, convolutedSpectrum, bitmask, iStart,\n                                                   nRows, nCols, peakList, threshold) {\n        var iRow = Math.floor(iStart / nCols);\n        var iCol = iStart % nCols;\n        var peakPoints =[];\n        //console.log(iStart+\" \"+iRow+\" \"+iCol);\n        // scanBitmask(bitmask, convolutedSpectrum, nRows, nCols, iRow, iCol,\n        // peakPoints);\n        this.scanBitmask(bitmask, nRows, nCols, iRow, iCol, peakPoints);\n        //console.log(\"extractArea.lng \"+peakPoints.length);\n        var x = new Array(peakPoints.length);\n        var y = new Array(peakPoints.length);\n        var z = new Array(peakPoints.length);\n        var nValues = peakPoints.length;\n        var xAverage = 0.0;\n        var yAverage = 0.0;\n        var zSum = 0.0;\n        if (nValues >= 9) {\n            if (this.DEBUG)\n                console.log(\"nValues=\" + nValues);\n            var maxValue = Number.NEGATIVE_INFINITY;\n            var maxIndex = -1;\n            for (var i = 0; i < nValues; i++) {\n                var pt = (peakPoints.splice(0,1))[0];\n                x[i] = pt[0];\n                y[i] = pt[1];\n                z[i] = spectrum[pt[1] * nCols + pt[0]];\n                xAverage += x[i] * z[i];\n                yAverage += y[i] * z[i];\n                zSum += z[i];\n                if (z[i] > maxValue) {\n                    maxValue = z[i];\n                    maxIndex = i;\n                }\n            }\n            if (maxIndex != -1) {\n                xAverage /= zSum;\n                yAverage /= zSum;\n                var newPeak = {x:xAverage, y:yAverage, z:zSum};\n                var minmax;\n                minmax =StatArray.minMax(x);\n                newPeak.minX=minmax.min;\n                newPeak.maxX=minmax.max;\n                minmax = StatArray.minMax(y);\n                newPeak.minY=minmax.min;\n                newPeak.maxY=minmax.max;\n                peakList.push(newPeak);\n            }\n        }\n        return nValues;\n    },\n    /*\n     Return all the peaks(x,y points) that composes a signal.\n     */\n    scanBitmask : function(bitmask, nRows, nCols, iRow, iCol, peakPoints) {\n        //console.log(nRows+\" \"+iRow+\" \"+nCols+\" \"+iCol);\n        if (iRow < 0 || iCol < 0 || iCol == nCols || iRow == nRows)\n            return;\n        if (bitmask[iRow * nCols + iCol]) {\n            bitmask[iRow * nCols + iCol] = 0;\n            peakPoints.push([iCol, iRow]);\n            this.scanBitmask(bitmask, nRows, nCols, iRow + 1, iCol, peakPoints);\n            this.scanBitmask(bitmask, nRows, nCols, iRow - 1, iCol, peakPoints);\n            this.scanBitmask(bitmask, nRows, nCols, iRow, iCol + 1, peakPoints);\n            this.scanBitmask(bitmask, nRows, nCols, iRow, iCol - 1, peakPoints);\n        }\n    },\n    /**\n     This function converts a set of 2D-peaks in 2D-signals. Each signal could be composed\n     of many 2D-peaks, and it has some additional information related to the NMR spectrum.\n     */\n    createSignals2D : function(peaks, spectraData, tolerance){\n        //console.log(peaks.length);\n        var signals=[];\n        var nbSubSpectra = spectraData.getNbSubSpectra();\n\n        var bf1=spectraData.observeFrequencyX();\n        var bf2=spectraData.observeFrequencyY();\n\n        var firstY = spectraData.getFirstY();\n        var lastY = spectraData.getLastY();\n        var dy = spectraData.getDeltaY();\n\n        //console.log(firstY+\" \"+lastY+\" \"+dy+\" \"+nbSubSpectra);\n        //spectraData.setActiveElement(0);\n        var noValid=0;\n        for (var i = peaks.length-1; i >=0 ; i--) {\n            //console.log(peaks[i].x+\" \"+spectraData.arrayPointToUnits(peaks[i].x));\n            //console.log(peaks[i].y+\" \"+(firstY + dy * (peaks[i].y)));\n            peaks[i].x=(spectraData.arrayPointToUnits(peaks[i].x));\n            peaks[i].y=(firstY + dy * (peaks[i].y));\n\n            //console.log(peaks[i])\n            //Still having problems to correctly detect peaks on those areas. So I'm removing everything there.\n            if(peaks[i].y<-1||peaks[i].y>=210){\n                peaks.splice(i,1);\n            }\n        }\n        //console.log(peaks);\n        //The connectivity matrix is an square and symmetric matrix, so we'll only store the upper diagonal in an\n        //array like form\n        var connectivity = [];\n        var tmp=0;\n        tolerance*=tolerance;\n        //console.log(tolerance);\n        for (var i = 0; i < peaks.length; i++) {\n            for (var j = i; j < peaks.length; j++) {\n                tmp=Math.pow((peaks[i].x-peaks[j].x)*bf1,2)+Math.pow((peaks[i].y-peaks[j].y)*bf2,2);\n                //Console.log(peaks[i].getX()+\" \"+peaks[j].getX()+\" \"+tmp);\n                if(tmp<tolerance){//30*30Hz We cannot distinguish peaks with less than 20 Hz of separation\n                    connectivity.push(1);\n                }\n                else{\n                    connectivity.push(0);\n                }\n            }\n        }\n\n        //console.log(connectivity);\n\n        var clusters = SimpleClustering.fullClusterGenerator(connectivity);\n\n        //console.log(clusters)\n\n        var signals = [];\n        if (peaks != null) {\n            var xValue, yValue;\n            for (var iCluster = 0; iCluster < clusters.length; iCluster++) {\n                var signal={nucleusX:spectraData.getNucleus(1),nucleusY:spectraData.getNucleus(2)};\n                signal.resolutionX=( spectraData.getLastX()-spectraData.getFirstX()) / spectraData.getNbPoints();\n                signal.resolutionY=dy;\n                var peaks2D = [];\n                signal.shiftX = 0;\n                signal.shiftY = 0;\n                var sumZ = 0;\n                for(var jPeak = clusters[iCluster].length-1;jPeak>=0;jPeak--){\n                    if(clusters[iCluster][jPeak]==1){\n                        peaks2D.push(peaks[jPeak]);\n                        signal.shiftX+=peaks[jPeak].x*peaks[jPeak].z;\n                        signal.shiftY+=peaks[jPeak].y*peaks[jPeak].z;\n                        sumZ+=peaks[jPeak].z;\n                    }\n                }\n                signal.shiftX/=sumZ;\n                signal.shiftY/=sumZ;\n                signal.peaks = peaks2D;\n                signals.push(signal);\n            }\n        }\n        //console.log(signals);\n        return signals;\n    }\n}\n\nmodule.exports = PeakPicking2D;\n},{\"./FFTUtils\":4,\"./PeakOptimizer\":7,\"./SimpleClustering\":11,\"ml-stat/array\":3}],10:[function(require,module,exports){\n// small note on the best way to define array\n// http://jsperf.com/lp-array-and-loops/2\n\nvar StatArray = require('ml-stat/array');\nvar JcampConverter=require(\"jcampconverter\");\n\nfunction SD(sd) {\n    this.sd=sd;\n    this.activeElement=0;\n\n    this.DATACLASS_XY = 1;\n    this.DATACLASS_PEAK = 2;\n\n    this.TYPE_NMR_SPECTRUM = 'NMR Spectrum';\n    this.TYPE_NMR_FID = 'NMR FID';\n    this.TYPE_IR = 'IR';\n    this.TYPE_RAMAN = 'RAMAN';\n    this.TYPE_UV = 'UV';\n    this.TYPE_MASS = 'MASS';\n    this.TYPE_HPLC = 'HPLC';\n    this.TYPE_GC = 'GC';\n    this.TYPE_CD = 'CD';\n    this.TYPE_2DNMR_SPECTRUM = 'nD NMR SPECTRUM';\n    this.TYPE_2DNMR_FID = 'nD NMR FID';\n    this.TYPE_XY_DEC = 'XY DEC';\n    this.TYPE_XY_INC= 'XY INC';\n    this.TYPE_IV = 'IV';\n}\n\nSD.fromJcamp = function(jcamp) {\n    var spectrum= JcampConverter.convert(jcamp,{xy:true});\n    return new SD(spectrum);\n}\n\n\n/**\n * @function setActiveElement(nactiveSpectrum);\n * This function sets the nactiveSpectrum sub-spectrum as active\n * \n */\nSD.prototype.setActiveElement = function(nactiveSpectrum){\n    this.activeElement=nactiveSpectrum;\n}\n\n/**\n * @function getActiveElement();\n * This function returns the index of the active sub-spectrum.\n */\nSD.prototype.getActiveElement = function(){\n    return this.activeElement;\n},\n\n\n\n/**\n*   Returns the number of points in the current spectrum\n*/\nSD.prototype.getNbPoints=function(i){\n    return this.getSpectrumData(i).y.length;\n}\n\n/**\n * Return the first value of the direct dimension\n */\nSD.prototype.getFirstX=function(i) {\n    i=i||this.activeElement;\n    return this.sd.spectra[i].firstX;\n}\n\n/**\n * Return the last value of the direct dimension\n */\nSD.prototype.getLastX=function(i) {\n    i=i||this.activeElement;\n    return this.sd.spectra[i].lastX;\n}\n\n/**\n * Return the first value of the direct dimension\n */\nSD.prototype.getFirstY=function(i) {\n    i=i||this.activeElement;\n    return this.sd.spectra[i].firstY;\n}\n\n/**\n * Return the first value of the direct dimension\n */\nSD.prototype.getLastY = function(i){\n    i=i||this.activeElement;\n    return this.sd.spectra[i].lastY;\n}\n\nSD.prototype.setDataClass = function(dataClass){\n    if(dataClass==this.DATACLASS_PEAK) {\n        this.getSpectrum().isPeaktable = true;\n        this.getSpectrum().isXYdata = false;\n    }\n    if(dataClass==this.DATACLASS_XY){\n        this.getSpectrum().isXYdata = true;\n        this.getSpectrum().isPeaktable = false;\n    }\n}\n\n/**\n * @function isDataClassPeak();\n * Is this a PEAKTABLE spectrum?\n */\nSD.prototype.isDataClassPeak = function(){\n    if(this.getSpectrum().isPeaktable)\n        return  this.getSpectrum().isPeaktable;\n    return false;\n}\n\n/**\n * @function isDataClassXY();\n * Is this a XY spectrum?\n */\nSD.prototype.isDataClassXY = function(){\n    if(this.getSpectrum().isXYdata)\n        return  this.getSpectrum().isXYdata;\n    return false\n}\n\nSD.prototype.setDataType = function(dataType){\n    this.getSpectrum().dataType=dataType;\n}\n\nSD.prototype.getDataType = function(){\n    return this.getSpectrum().dataType;\n}\n\n/**\n* Return the i-th sub-spectra in the current spectrum\n*/\nSD.prototype.getSpectrumData=function(i) {\n    i=i||this.activeElement;\n    return this.sd.spectra[i].data[0];\n}\n\n/**\n * Return the i-th sub-spectra in the current spectrum\n */\nSD.prototype.getSpectrum=function(i) {\n    i=i||this.activeElement;\n    return this.sd.spectra[i];\n}\n\n/**\n * Returns the number of sub-spectra in this object\n */\nSD.prototype.getNbSubSpectra=function(){\n    return this.sd.spectra.length;\n}\n\n\n/**\n *   Returns an array containing the x values of the spectrum\n */\nSD.prototype.getXData=function(i){\n    return this.getSpectrumData(i).x;\n}\n\n/**\n * @function getYData();\n * This function returns a double array containing the values of the intensity for the current sub-spectrum.\n */\nSD.prototype.getYData=function(i){\n    return this.getSpectrumData(i).y;\n}\n\nSD.prototype.getX=function(i){\n    return this.getXData()[i];\n}\n\nSD.prototype.getY=function(i){\n    return this.getYData()[i];\n}\n\n/**\n * @function getXYData();\n * To get a 2 dimensional array with the x and y of this spectraData( Only for 1D spectra).\n * Returns a double[2][nbPoints] where the first row contains the x values and the second row the y values.\n */\nSD.prototype.getXYData=function(i){\n    return [this.getXData(i),this.getYData(i)];\n}\n\nSD.prototype.getTitle=function(i) {\n    return this.getSpectrum(i).title;\n}\n\n/**\n * @function setTitle(newTitle);\n * To set the title of this spectraData.\n * @param newTitle The new title\n */\nSD.prototype.setTitle=function(newTitle,i) {\n    this.getSpectrum(i).title=newTitle;\n}\n\n/**\n * @function getMinY(i)\n * This function returns the minimal value of Y\n */\nSD.prototype.getMinY=function(i) {\n    return  StatArray.min(this.getYData(i));\n}\n\n/**\n * @function getMaxY(i)\n * This function returns the maximal value of Y\n */\nSD.prototype.getMaxY=function(i) {\n    return  StatArray.max(this.getYData(i));\n}\n\n/**\n * @function getMinMax(i)\n */\nSD.prototype.getMinMaxY=function(i) {\n    return  StatArray.minMax(this.getYData(i));\n}\n\n\n/**\n* Get the noise threshold level of the current spectrum. It uses median instead of the mean\n*/\nSD.prototype.getNoiseLevel=function(){\n    var mean = 0,stddev=0;\n    var y = this.getYData();\n    var length = this.getNbPoints(),i=0;\n    for(i = 0; i < length; i++){\n        mean+=y[i];\n    }\n    mean/=this.getNbPoints();\n    var averageDeviations = new Array(length);\n    for (i = 0; i < length; i++)\n        averageDeviations[i] = Math.abs(y[i] - mean);\n    averageDeviations.sort();\n    if (length % 2 == 1) {\n        stddev = averageDeviations[(length-1)/2] / 0.6745;\n    } else {\n        stddev = 0.5*(averageDeviations[length/2]+averageDeviations[length/2-1]) / 0.6745;\n    }\n\n    return stddev*this.getNMRPeakThreshold(this.getNucleus(1));\n}\n\n\n/**\n* Return the xValue for the given index\n*/\nSD.prototype.arrayPointToUnits=function(doublePoint){\n    return (this.getFirstX() - (doublePoint* (this.getFirstX() - this.getLastX()) / (this.getNbPoints()-1)));\n}\n\n/**\n * Returns the index-value for the data array corresponding to a X-value in\n * units for the element of spectraData to which it is linked (spectraNb).\n * This method makes use of spectraData.getFirstX(), spectraData.getLastX()\n * and spectraData.getNbPoints() to derive the return value if it of data class XY\n * It performs a binary search if the spectrum is a peak table\n *\n * @param inValue\n *            (value in Units to be converted)\n * @return an integer representing the index value of the inValue\n */\nSD.prototype.unitsToArrayPoint=function(inValue){\n    if (this.isDataClassXY()) {\n        return Math.ceil((this.getFirstX() - inValue) * (-1.0 / this.getInterval()));\n    } else if (this.isDataClassPeak())\n    {\n        var currentArrayPoint = 0,upperLimit=this.getNbPoints()-1, lowerLimit=0, midPoint;\n        //If inverted scale\n        if(this.getFirstX()>this.getLastX()){\n            upperLimit=0;\n            lowerLimit=this.getNbPoints()-1;\n\n            if(inValue>this.getFirstX())\n                return this.getNbPoints();\n            if(inValue<this.getLastX())\n                return -1;\n        }\n        else{\n            if(inValue<this.getFirstX())\n                return -1;\n            if(inValue>this.getLastX())\n                return this.getNbPoints();\n        }\n\n        while (Math.abs(upperLimit-lowerLimit) > 1)\n        {\n            midPoint=Math.round(Math.floor((upperLimit+lowerLimit)/2));\n            //x=this.getX(midPoint);\n            if(this.getX(midPoint)==inValue)\n                return midPoint;\n            if(this.getX(midPoint)>inValue)\n                upperLimit=midPoint;\n            else\n                lowerLimit=midPoint;\n        }\n        currentArrayPoint=lowerLimit;\n        if(Math.abs(this.getX(lowerLimit)-inValue)>Math.abs(this.getX(upperLimit)-inValue))\n            currentArrayPoint=upperLimit;\n        return currentArrayPoint;\n    } else {\n        return 0;\n    }\n}\n\n\n\n/**\n* Returns the separation between 2 consecutive points in the spectra domain\n*/\nSD.prototype.getDeltaX=function(){\n    return (this.getLastX()-this.getFirstX()) / (this.getNbPoints()-1);\n}\n\n/**\n * @function setMinMax(min,max)\n * This function scales the values of Y between the min and max parameters\n * @param min   Minimum desired value for Y\n * @param max   Maximum desired value for Y\n */\nSD.prototype.setMinMax=function(min,max) {\n    var y = this.getYData();\n    var minMax = StatArray.minMax(y);\n    var factor = (max - min)/(minMax.max-minMax.min);\n    for(var i=0;i< y.length;i++){\n        y[i]=(y[i]-minMax.min)*factor+min;\n    }\n}\n\n/**\n * @function setMin(min)\n * This function scales the values of Y to fit the min parameter\n * @param min   Minimum desired value for Y\n */\nSD.prototype.setMin=function(min) {\n    var y = this.getYData();\n    var currentMin = StatArray.min(y);\n    var factor = min/currentMin;\n    for(var i=0;i< y.length;i++){\n        y[i]*=factor;\n    }\n}\n\n/**\n * @function setMax(max)\n * This function scales the values of Y to fit the max parameter\n * @param max   Maximum desired value for Y\n */\nSD.prototype.setMax=function(max) {\n    var y = this.getYData();\n    var currentMin = StatArray.max(y);\n    var factor = max/currentMin;\n    for(var i=0;i< y.length;i++){\n        y[i]*=factor;\n    }\n}\n\n/**\n * @function YShift(value)\n * This function shifts the values of Y\n * @param value Distance of the shift\n */\nSD.prototype.YShift=function(value) {\n    var y = this.getSpectrumData().y;\n    var length = this.getNbPoints(),i=0;\n    for(i=0;i<length;i++){\n        y[i]+=value;\n    }\n    this.getSpectrum().firstY+=value;\n    this.getSpectrum().lastY+=value;\n}\n\n/**\n * @function shift(globalShift)\n * This function shift the given spectraData. After this function is applied, all the peaks in the\n * spectraData will be found at xi+globalShift\n * @param globalShift\n */\nSD.prototype.shift=function(globalShift) {\n    for(var i=0;i<this.getNbSubSpectra();i++){\n        this.setActiveElement(i);\n        var x = this.getSpectrumData().x;\n        var length = this.getNbPoints(),i=0;\n        for(i=0;i<length;i++){\n            x[i]+=globalShift;\n        }\n\n        this.getSpectrum().firstX+=globalShift;\n        this.getSpectrum().lastX+=globalShift;\n    }\n\n}\n\n/**\n * @function fillWith(from, to, value)\n * This function fills a zone of the spectrum with the given value.\n * @param from\n * @param to\n * @param fillWith\n */\nSD.prototype.fillWith=function(from, to, value) {\n    var tmp, start, end, x, y;\n    if(from > to) {\n        var tmp = from;\n        from = to;\n        to = tmp;\n    }\n\n    for(var i=0;i<this.getNbSubSpectra();i++){\n        this.setActiveElement(i);\n        x = this.getXData();\n        y = this.getYData();\n        start = this.unitsToArrayPoint(from);\n        end = this.unitsToArrayPoint(to);\n        if(start > end){\n            tmp = start;\n            start = end;\n            end = tmp;\n        }\n        if(start<0)\n            start=0;\n        if(end>=this.getNbPoints)\n            end=this.getNbPoints-1;\n        for(i=start;i<=end;i++){\n                y[i]=value;\n        }\n    }\n}\n\n/**\n * @function suppressZone(from, to)\n * This function suppress a zone from the given spectraData within the given x range.\n * Returns a spectraData of type PEAKDATA without peaks in the given region\n * @param from\n * @param to\n */\nSD.prototype.suppressZone=function(from, to) {\n    var tmp, start, end, x, y;\n    if(from > to) {\n        var tmp = from;\n        from = to;\n        to = tmp;\n    }\n\n    for(var i=0;i<this.getNbSubSpectra();i++){\n        this.setActiveElement(i);\n        x = this.getXData();\n        y = this.getYData();\n        start = this.unitsToArrayPoint(from);\n        end = this.unitsToArrayPoint(to);\n        if(start > end){\n            tmp = start;\n            start = end;\n            end = tmp;\n        }\n        if(start<0)\n            start=0;\n        if(end>=this.getNbPoints)\n            end=this.getNbPoints-1;\n        for(i=end;i>=start;i--){\n            y.splice(i,1);\n            x.splice(i,1);\n        }\n    }\n    this.setDataClass(this.DATACLASS_PEAK);\n}\n\n\n/**\n * @function peakPicking(parameters)\n * This function performs a simple peak detection in a spectraData. The parameters that can be specified are:\n * Returns a two dimensional array of double specifying [x,y] of the detected peaks.\n * @option from:    Lower limit.\n * @option to:      Upper limit.\n * @option threshold: The minimum intensity to consider a peak as a signal, expressed as a percentage of the highest peak. \n * @option stdev: Number of standard deviation of the noise for the threshold calculation if a threshold is not specified.\n * @option resolution: The maximum resolution of the spectrum for considering peaks.\n * @option yInverted: Is it a Y inverted spectrum?(like an IR spectrum)\n * @option smooth: A function for smoothing the spectraData before the detection. If your are dealing with\n * experimental spectra, smoothing will make the algorithm less prune to false positives.\n */\nSD.prototype.simplePeakPicking=function(parameters) {\n    //@TODO implements this filter\n}\n\n/**\n * @function getMaxPeak();\n * Get the maximum peak\n */\nSD.prototype.getMaxPeak = function(){\n    var y = this.getSpectraDataY();\n    var max=y[0], index=0;\n    for(var i=0;i< y.length;i++){\n        if(max<y[i]){\n            max = y[i];\n            index=i;\n        }\n    }\n    return [this.getSpectraDataX()[index],max];\n}\n\n/**\n * @function getParamDouble(name, defvalue);\n * Get the value of the parameter\n * @param  name The parameter name\n * @param  defvalue The default value\n */\nSD.prototype.getParamDouble = function(name, defvalue){\n    var value = this.sd.info[name];\n    if(!value)\n        value = defvalue;\n    return value;\n}\n\n/**\n * @function getParamString(name, defvalue);\n * Get the value of the parameter\n * @param  name The parameter name\n * @param  defvalue The default value\n */\nSD.prototype.getParamString = function(name, defvalue){\n    var value = this.sd.info[name];\n    if(!value)\n        value = defvalue;\n    return value+\"\";\n}\n\n/**\n * @function getParamInt(name, defvalue);\n * Get the value of the parameter\n * @param  name The parameter name\n * @param  defvalue The default value\n */\nSD.prototype.getParamInt = function(name, defvalue){\n    var value = this.sd.info[name];\n    if(!value)\n        value = defvalue;\n    return value;\n}\n\n/**\n * Return the y elements of the current spectrum\n * @returns {*}\n */\nSD.prototype.getSpectrumDataY = function(){\n    return this.getYData();\n}\n\n/**\n * Return the x elements of the current spectrum\n * @returns {*}\n */\nSD.prototype.getSpectraDataX = function(){\n    return this.getXData();\n}\n\n/**\n * Set a new parameter to this spectrum\n * @param name\n * @param value\n */\nSD.prototype.putParam = function(name, value){\n    this.sd.info[name]=value;\n}\n\n/**\n * Returns a equally spaced vector within the given window.\n * @param from\n * @param to\n * @param nPoints\n * @returns {*}\n */\nSD.prototype.getVector = function(from, to, nPoints){\n    var x = this.getSpectraDataX();\n    var y = this.getSpectraDataY();\n    var result = [];\n    var start = 0, end = x.length- 1,direction=1;\n    var reversed = false;\n\n    if(x[0]>x[1]){\n        direction = -1;\n        start= x.length-1;\n        end = 0;\n    }\n\n    if(from > to){\n        var tmp = from;\n        from = to;\n        to = tmp;\n        reversed = true;\n    }\n\n    if(x[end]>from||x[start]>to)\n        return [];\n\n    while(x[start]<from){start+=direction;}\n\n    if(x[end]>to){\n        var end = start;\n        while(x[end]<to){end+=direction;}\n    }\n    var winPoints = Math.abs(end-start)+1;\n    var xwin = new Array(winPoints), ywin = new Array(winPoints);\n    var index = 0;\n    if(direction==-1)\n        index=winPoints-1;\n    var i=start-direction;\n    do{\n        i+=direction;\n        xwin[index]=x[i];\n        ywin[index]=y[i];\n        index+=direction;\n    }while(i!=end);\n\n    return [xwin,ywin];\n}\n\n/**\n * @function is2D();\n * Is it a 2D spectrum?\n */\nSD.prototype.is2D = function(){\n    return false;\n}\n\n\nmodule.exports = SD;\n\n\n},{\"jcampconverter\":2,\"ml-stat/array\":3}],11:[function(require,module,exports){\nvar SimpleClustering={\n\n\t/*This function returns the cluster list for a given connectivity matrix.\n\t*To improve the performance, the connectivity(square and symmetric) matrix \n\t*is given as a single vector containing  the upper diagonal of the matrix\n\t*Note: This algorithm is O(n*n) complexity. I wonder if there is something better. \n\t*acastillo\n\t*/\n\tfullClusterGenerator:function(conn){\n\t\tvar nRows = Math.sqrt(conn.length*2+0.25)-0.5;\n\t\t//console.log(\"nRows: \"+nRows+\" - \"+conn.length);\n\t\tvar clusterList = [];\n\t\tvar available = new Array(nRows);\n\t\tvar remaining = nRows, i=0;\n\t\tvar cluster = [];\n\t\t//Mark all the elements as available\n\t\tfor(i=nRows-1;i>=0;i--){\n\t\t\tavailable[i]=1;\n\t\t}\n\t\tvar nextAv=-1;\n\t\tvar toInclude = [];\n\t\twhile(remaining>0){\n\t\t\tif(toInclude.length===0){\n\t\t\t\t//If there is no more elements to include. Start a new cluster\n\t\t\t\tcluster = new Array(nRows);\n\t\t\t\tfor(i=nRows-1;i>=0;i--)\n\t\t\t\t\tcluster[i]=0;\n\t\t\t\tclusterList.push(cluster);\n\t\t    \tfor(nextAv = nRows-1;available[nextAv]==0;nextAv--){};\n\t\t    }\n\t\t    else{\n\t\t    \tnextAv=toInclude.splice(0,1);\n\t\t    }\n\t\t    //console.log(\"row: \"+nextAv);\n\t\t    cluster[nextAv]=1;\n\t\t    available[nextAv]=0;\n\t\t    remaining--;\n\t\t    //Copy the next available row\n\t\t    var row = new Array(nRows);\n\t\t\tfor(i=nRows-1;i>=0;i--){\n\t\t\t\tvar c=Math.max(nextAv,i);\n\t\t\t\tvar r=Math.min(nextAv,i);\n\t\t\t\t//The element in the conn matrix\n\t\t\t\t//console.log(\"index: \"+r*(2*nRows-r-1)/2+c)\n\t\t\t\trow[i]=conn[r*(2*nRows-r-1)/2+c];\n\t\t\t\t//console.log(\"col: \"+i+\":\"+row[i]);\n\t\t\t\t//There is new elements to include in this row?\n\t\t\t\t//Then, include it to the current cluster\n\t\t\t\tif(row[i]==1&&available[i]==1&&cluster[i]==0){\n\t\t\t\t\ttoInclude.push(i);\n\t\t\t\t\tcluster[i]=1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn clusterList;\n\t}\n}\n\nmodule.exports = SimpleClustering;\n},{}],12:[function(require,module,exports){\n/**\n * Fast Fourier Transform module\n * 1D-FFT/IFFT, 2D-FFT/IFFT (radix-2)\n */\nvar FFT = (function(){\n  var FFT;  \n  \n  if(typeof exports !== 'undefined') {\n    FFT = exports;   // for CommonJS\n  } else {\n    FFT = {};\n  }\n  \n  var version = {\n    release: '0.3.0',\n    date: '2013-03'\n  };\n  FFT.toString = function() {\n    return \"version \" + version.release + \", released \" + version.date;\n  };\n\n  // core operations\n  var _n = 0,          // order\n      _bitrev = null,  // bit reversal table\n      _cstb = null;    // sin/cos table\n\n  var core = {\n    init : function(n) {\n      if(n !== 0 && (n & (n - 1)) === 0) {\n        _n = n;\n        core._initArray();\n        core._makeBitReversalTable();\n        core._makeCosSinTable();\n      } else {\n        throw new Error(\"init: radix-2 required\");\n      }\n    },\n    // 1D-FFT\n    fft1d : function(re, im) {\n      core.fft(re, im, 1);\n    },\n    // 1D-IFFT\n    ifft1d : function(re, im) {\n      var n = 1/_n;\n      core.fft(re, im, -1);\n      for(var i=0; i<_n; i++) {\n        re[i] *= n;\n        im[i] *= n;\n      }\n    },\n     // 1D-IFFT\n    bt1d : function(re, im) {\n      core.fft(re, im, -1);\n    },\n    // 2D-FFT Not very useful if the number of rows have to be equal to cols\n    fft2d : function(re, im) {\n      var tre = [],\n          tim = [],\n          i = 0;\n      // x-axis\n      for(var y=0; y<_n; y++) {\n        i = y*_n;\n        for(var x1=0; x1<_n; x1++) {\n          tre[x1] = re[x1 + i];\n          tim[x1] = im[x1 + i];\n        }\n        core.fft1d(tre, tim);\n        for(var x2=0; x2<_n; x2++) {\n          re[x2 + i] = tre[x2];\n          im[x2 + i] = tim[x2];\n        }\n      }\n      // y-axis\n      for(var x=0; x<_n; x++) {\n        for(var y1=0; y1<_n; y1++) {\n          i = x + y1*_n;\n          tre[y1] = re[i];\n          tim[y1] = im[i];\n        }\n        core.fft1d(tre, tim);\n        for(var y2=0; y2<_n; y2++) {\n          i = x + y2*_n;\n          re[i] = tre[y2];\n          im[i] = tim[y2];\n        }\n      }\n    },\n    // 2D-IFFT\n    ifft2d : function(re, im) {\n      var tre = [],\n          tim = [],\n          i = 0;\n      // x-axis\n      for(var y=0; y<_n; y++) {\n        i = y*_n;\n        for(var x1=0; x1<_n; x1++) {\n          tre[x1] = re[x1 + i];\n          tim[x1] = im[x1 + i];\n        }\n        core.ifft1d(tre, tim);\n        for(var x2=0; x2<_n; x2++) {\n          re[x2 + i] = tre[x2];\n          im[x2 + i] = tim[x2];\n        }\n      }\n      // y-axis\n      for(var x=0; x<_n; x++) {\n        for(var y1=0; y1<_n; y1++) {\n          i = x + y1*_n;\n          tre[y1] = re[i];\n          tim[y1] = im[i];\n        }\n        core.ifft1d(tre, tim);\n        for(var y2=0; y2<_n; y2++) {\n          i = x + y2*_n;\n          re[i] = tre[y2];\n          im[i] = tim[y2];\n        }\n      }\n    },\n    // core operation of FFT\n    fft : function(re, im, inv) {\n      var d, h, ik, m, tmp, wr, wi, xr, xi,\n          n4 = _n >> 2;\n      // bit reversal\n      for(var l=0; l<_n; l++) {\n        m = _bitrev[l];\n        if(l < m) {\n          tmp = re[l];\n          re[l] = re[m];\n          re[m] = tmp;\n          tmp = im[l];\n          im[l] = im[m];\n          im[m] = tmp;\n        }\n      }\n      // butterfly operation\n      for(var k=1; k<_n; k<<=1) {\n        h = 0;\n        d = _n/(k << 1);\n        for(var j=0; j<k; j++) {\n          wr = _cstb[h + n4];\n          wi = inv*_cstb[h];\n          for(var i=j; i<_n; i+=(k<<1)) {\n            ik = i + k;\n            xr = wr*re[ik] + wi*im[ik];\n            xi = wr*im[ik] - wi*re[ik];\n            re[ik] = re[i] - xr;\n            re[i] += xr;\n            im[ik] = im[i] - xi;\n            im[i] += xi;\n          }\n          h += d;\n        }\n      }\n    },\n    // initialize the array (supports TypedArray)\n    _initArray : function() {\n      if(typeof Uint32Array !== 'undefined') {\n        _bitrev = new Uint32Array(_n);\n      } else {\n        _bitrev = [];\n      }\n      if(typeof Float64Array !== 'undefined') {\n        _cstb = new Float64Array(_n*1.25);\n      } else {\n        _cstb = [];\n      }\n    },\n    // zero padding\n    _paddingZero : function() {\n      // TODO\n    },\n    // makes bit reversal table\n    _makeBitReversalTable : function() {\n      var i = 0,\n          j = 0,\n          k = 0;\n      _bitrev[0] = 0;\n      while(++i < _n) {\n        k = _n >> 1;\n        while(k <= j) {\n          j -= k;\n          k >>= 1;\n        }\n        j += k;\n        _bitrev[i] = j;\n      }\n    },\n    // makes trigonometiric function table\n    _makeCosSinTable : function() {\n      var n2 = _n >> 1,\n          n4 = _n >> 2,\n          n8 = _n >> 3,\n          n2p4 = n2 + n4,\n          t = Math.sin(Math.PI/_n),\n          dc = 2*t*t,\n          ds = Math.sqrt(dc*(2 - dc)),\n          c = _cstb[n4] = 1,\n          s = _cstb[0] = 0;\n      t = 2*dc;\n      for(var i=1; i<n8; i++) {\n        c -= dc;\n        dc += t*c;\n        s += ds;\n        ds -= t*s;\n        _cstb[i] = s;\n        _cstb[n4 - i] = c;\n      }\n      if(n8 !== 0) {\n        _cstb[n8] = Math.sqrt(0.5);\n      }\n      for(var j=0; j<n4; j++) {\n        _cstb[n2 - j]  = _cstb[j];\n      }\n      for(var k=0; k<n2p4; k++) {\n        _cstb[k + n2] = -_cstb[k];\n      }\n    }\n  };\n  // aliases (public APIs)\n  var apis = ['init', 'fft1d', 'ifft1d', 'fft2d', 'ifft2d'];\n  for(var i=0; i<apis.length; i++) {\n    FFT[apis[i]] = core[apis[i]];\n  }\n  FFT.bt = core.bt1d;\n  FFT.fft = core.fft1d;\n  FFT.ifft = core.ifft1d;\n  \n  return FFT;\n}).call(this);\n\n},{}]},{},[1])(1)\n});"],"sourceRoot":"/source/"}